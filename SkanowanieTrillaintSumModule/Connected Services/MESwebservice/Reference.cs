//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MESwebservice
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/MesServiceKS/Boards/", ConfigurationName="MESwebservice.BoardsSoap")]
    public interface BoardsSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmDataAnalysis_ListByWipId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_QmDataAnalysis_ListByWipIdResponseMes_QmDataAnalysis_ListByWipIdResult Mes_QmDataAnalysis_ListByWipId(string mesServer, string mesDatabase, int wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmDataAnalysis_ListByWipId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_QmDataAnalysis_ListByWipIdResponseMes_QmDataAnalysis_ListByWipIdResult> Mes_QmDataAnalysis_ListByWipIdAsync(string mesServer, string mesDatabase, int wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmFailureData_ListByCustomerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_QmFailureData_ListByCustomerIdResponseMes_QmFailureData_ListByCustomerIdResult Mes_QmFailureData_ListByCustomerId(string mesServer, string mesDatabase, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmFailureData_ListByCustomerId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_QmFailureData_ListByCustomerIdResponseMes_QmFailureData_ListByCustomerIdResult> Mes_QmFailureData_ListByCustomerIdAsync(string mesServer, string mesDatabase, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmTestDataHeader_SelectBySerialNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_QmTestDataHeader_SelectBySerialNumberResponseMes_QmTestDataHeader_SelectBySerialNumberResult Mes_QmTestDataHeader_SelectBySerialNumber(string mesServer, string mesDatabase, string serialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmTestDataHeader_SelectBySerialNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_QmTestDataHeader_SelectBySerialNumberResponseMes_QmTestDataHeader_SelectBySerialNumberResult> Mes_QmTestDataHeader_SelectBySerialNumberAsync(string mesServer, string mesDatabase, string serialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmPvRules_EpsProcessVerify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_QmPvRules_EpsProcessVerifyResponseMes_QmPvRules_EpsProcessVerifyResult Mes_QmPvRules_EpsProcessVerify(string mesServer, string mesDatabase, string assemblyNo, string assemblyRev, string serialNumber, string customerId, string checkPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmPvRules_EpsProcessVerify", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_QmPvRules_EpsProcessVerifyResponseMes_QmPvRules_EpsProcessVerifyResult> Mes_QmPvRules_EpsProcessVerifyAsync(string mesServer, string mesDatabase, string assemblyNo, string assemblyRev, string serialNumber, string customerId, string checkPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Eps_CrContainers_GetBoxContents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Eps_CrContainers_GetBoxContentsResponseEps_CrContainers_GetBoxContentsResult Eps_CrContainers_GetBoxContents(string mesServer, string mesDatabase, string mesUser, int customerId, string boxNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Eps_CrContainers_GetBoxContents", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Eps_CrContainers_GetBoxContentsResponseEps_CrContainers_GetBoxContentsResult> Eps_CrContainers_GetBoxContentsAsync(string mesServer, string mesDatabase, string mesUser, int customerId, string boxNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Jems_EpLinking_GetLinkedData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Jems_EpLinking_GetLinkedDataResponseJems_EpLinking_GetLinkedDataResult Jems_EpLinking_GetLinkedData(string mesServer, string mesDatabase, string mesUser, string wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Jems_EpLinking_GetLinkedData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Jems_EpLinking_GetLinkedDataResponseJems_EpLinking_GetLinkedDataResult> Jems_EpLinking_GetLinkedDataAsync(string mesServer, string mesDatabase, string mesUser, string wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Jems_QmMeasuredData_ListByWipId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Jems_QmMeasuredData_ListByWipIdResponseJems_QmMeasuredData_ListByWipIdResult Jems_QmMeasuredData_ListByWipId(string mesServer, string mesDatabase, string mesUser, string wipId, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Jems_QmMeasuredData_ListByWipId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Jems_QmMeasuredData_ListByWipIdResponseJems_QmMeasuredData_ListByWipIdResult> Jems_QmMeasuredData_ListByWipIdAsync(string mesServer, string mesDatabase, string mesUser, string wipId, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetBoxData(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBoxDataAsync(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement ShippingReport(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReport", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ShippingReportAsync(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReportRenesola", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement ShippingReportRenesola(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReportRenesola", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ShippingReportRenesolaAsync(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReport_2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement ShippingReport_2(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ShippingReport_2", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ShippingReport_2Async(string pCustomer, int pLotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBatchHeader", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetBatchHeader(string BatchNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBatchHeader", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBatchHeaderAsync(string BatchNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/TransformString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransformString(string pSourceValue, string pFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/TransformString", ReplyAction="*")]
        System.Threading.Tasks.Task<string> TransformStringAsync(string pSourceValue, string pFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_ContainerData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement HANWHA_ContainerData(string pstrCustomer, string palletNo, string sSO_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_ContainerData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> HANWHA_ContainerDataAsync(string pstrCustomer, string palletNo, string sSO_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMaterialData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetMaterialData(string MaterialName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMaterialData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetMaterialDataAsync(string MaterialName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_StockEDIReport_Day", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement HANWHA_StockEDIReport_Day(string pstrCustomer, string PalletList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_StockEDIReport_Day", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> HANWHA_StockEDIReport_DayAsync(string pstrCustomer, string PalletList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_EDIReport_Day", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement HANWHA_EDIReport_Day(string pstrCustomer, string PalletList, long LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_EDIReport_Day", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> HANWHA_EDIReport_DayAsync(string pstrCustomer, string PalletList, long LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_ProductionEDIReport_Day", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement HANWHA_ProductionEDIReport_Day(string pstrCustomer, string pstrSourceFileName, string pstrSourcePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/HANWHA_ProductionEDIReport_Day", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> HANWHA_ProductionEDIReport_DayAsync(string pstrCustomer, string pstrSourceFileName, string pstrSourcePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxContentsWithMeasuredData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetBoxContentsWithMeasuredData(string pCustomer, string pBoxNo, string pMeasuredLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxContentsWithMeasuredData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBoxContentsWithMeasuredDataAsync(string pCustomer, string pBoxNo, string pMeasuredLabel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/RENESOLA_EDIReport_Day", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement RENESOLA_EDIReport_Day(string pstrCustomer, string BoxesList, int LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/RENESOLA_EDIReport_Day", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> RENESOLA_EDIReport_DayAsync(string pstrCustomer, string BoxesList, int LotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHeader", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetBoardHeader(string CustomerName, string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHeader", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBoardHeaderAsync(string CustomerName, string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/VerifySetupSheetDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement VerifySetupSheetDS(string AssemblyID, string RouteStepID, string EquipmentID, string SetupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/VerifySetupSheetDS", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> VerifySetupSheetDSAsync(string AssemblyID, string RouteStepID, string EquipmentID, string SetupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/VerifySetupSheet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VerifySetupSheet(int AssemblyID, int RouteStepID, int EquipmentID, int SetupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/VerifySetupSheet", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VerifySetupSheetAsync(int AssemblyID, int RouteStepID, int EquipmentID, int SetupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetGRNData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetGRNData(string GRNNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetGRNData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetGRNDataAsync(string GRNNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetQtyByBatchRouteStep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetQtyByBatchRouteStep(string BatchNumber, string RouteStepName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetQtyByBatchRouteStep", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetQtyByBatchRouteStepAsync(string BatchNumber, string RouteStepName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetQtyByBatchRouteStepSum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetQtyByBatchRouteStepSum(string BatchNumber, string RouteStepName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetQtyByBatchRouteStepSum", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetQtyByBatchRouteStepSumAsync(string BatchNumber, string RouteStepName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListCRDMaterials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement ListCRDMaterials(int AssemblyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListCRDMaterials", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ListCRDMaterialsAsync(int AssemblyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListNotFullyBoxes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement ListNotFullyBoxes(string pCustomer, string pAssemblyNo, string pAssemblyRev, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListNotFullyBoxes", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ListNotFullyBoxesAsync(string pCustomer, string pAssemblyNo, string pAssemblyRev, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListBoxLineNumbers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement ListBoxLineNumbers(string pCustomer, string pBoxNo, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListBoxLineNumbers", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ListBoxLineNumbersAsync(string pCustomer, string pBoxNo, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListPanelsBoards", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement ListPanelsBoards(int pCustomerID, string pSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListPanelsBoards", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ListPanelsBoardsAsync(int pCustomerID, string pSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCustomerData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetCustomerData(string pCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCustomerData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetCustomerDataAsync(string pCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ProcessVerify", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement ProcessVerify(string pCustomer, string pSerialNumber, string pCheckPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ProcessVerify", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ProcessVerifyAsync(string pCustomer, string pSerialNumber, string pCheckPoint);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListUsersByGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement ListUsersByGroup(string pGroupName, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/ListUsersByGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ListUsersByGroupAsync(string pGroupName, string pFullPathFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CreateSerialNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateSerialNumber(int pCustomerID, string pSerialNumberName, string pSerialQuantity, string pAssemblyID, string pSerialSeparator, string pTestOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CreateSerialNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateSerialNumberAsync(int pCustomerID, string pSerialNumberName, string pSerialQuantity, string pAssemblyID, string pSerialSeparator, string pTestOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPalletBoxesContents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetPalletBoxesContents(int pCustomerID, string PalletNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPalletBoxesContents", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetPalletBoxesContentsAsync(int pCustomerID, string PalletNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckSerialNumberByCheckpointEPS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckSerialNumberByCheckpointEPS(string pCustomer, string pCheckPoint, string pSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckSerialNumberByCheckpointEPS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckSerialNumberByCheckpointEPSAsync(string pCustomer, string pCheckPoint, string pSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblies_SelectById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrAssemblies_SelectByIdResponseMes_CrAssemblies_SelectByIdResult Mes_CrAssemblies_SelectById(string mesServer, string mesDatabase, int assemblyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblies_SelectById", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblies_SelectByIdResponseMes_CrAssemblies_SelectByIdResult> Mes_CrAssemblies_SelectByIdAsync(string mesServer, string mesDatabase, int assemblyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblies_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrAssemblies_SelectByNameResponseMes_CrAssemblies_SelectByNameResult Mes_CrAssemblies_SelectByName(string mesServer, string mesDatabase, string assemblyNo, string assemblyRev);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblies_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblies_SelectByNameResponseMes_CrAssemblies_SelectByNameResult> Mes_CrAssemblies_SelectByNameAsync(string mesServer, string mesDatabase, string assemblyNo, string assemblyRev);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblies_ListActiveByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrAssemblies_ListActiveByCustomerResponseMes_CrAssemblies_ListActiveByCustomerResult Mes_CrAssemblies_ListActiveByCustomer(string mesServer, string mesDatabase, int customerId, string partials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblies_ListActiveByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblies_ListActiveByCustomerResponseMes_CrAssemblies_ListActiveByCustomerResult> Mes_CrAssemblies_ListActiveByCustomerAsync(string mesServer, string mesDatabase, int customerId, string partials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblyRoutes_ListActiveByRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrAssemblyRoutes_ListActiveByRouteResponseMes_CrAssemblyRoutes_ListActiveByRouteResult Mes_CrAssemblyRoutes_ListActiveByRoute(string mesServer, string mesDatabase, string routeId, string partials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblyRoutes_ListActiveByRoute", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblyRoutes_ListActiveByRouteResponseMes_CrAssemblyRoutes_ListActiveByRouteResult> Mes_CrAssemblyRoutes_ListActiveByRouteAsync(string mesServer, string mesDatabase, string routeId, string partials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblyRoutes_ListActiveByRouteByCu" +
            "stomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrAssemblyRoutes_ListActiveByRouteByCustomerResponseMes_CrAssemblyRoutes_ListActiveByRouteByCustomerResult Mes_CrAssemblyRoutes_ListActiveByRouteByCustomer(string mesServer, string mesDatabase, string routeId, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblyRoutes_ListActiveByRouteByCu" +
            "stomer", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblyRoutes_ListActiveByRouteByCustomerResponseMes_CrAssemblyRoutes_ListActiveByRouteByCustomerResult> Mes_CrAssemblyRoutes_ListActiveByRouteByCustomerAsync(string mesServer, string mesDatabase, string routeId, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblyRoutes_ListAssembliesByMa", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrAssemblyRoutes_ListAssembliesByMaResponseMes_CrAssemblyRoutes_ListAssembliesByMaResult Mes_CrAssemblyRoutes_ListAssembliesByMa(string mesServer, string mesDatabase, int factoryMaId, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrAssemblyRoutes_ListAssembliesByMa", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblyRoutes_ListAssembliesByMaResponseMes_CrAssemblyRoutes_ListAssembliesByMaResult> Mes_CrAssemblyRoutes_ListAssembliesByMaAsync(string mesServer, string mesDatabase, int factoryMaId, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrBatchSelect_SqlResultSetUb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrBatchSelect_SqlResultSetUbResponseMes_CrBatchSelect_SqlResultSetUbResult Mes_CrBatchSelect_SqlResultSetUb(string mesServer, string mesDatabase, string sqlQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrBatchSelect_SqlResultSetUb", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrBatchSelect_SqlResultSetUbResponseMes_CrBatchSelect_SqlResultSetUbResult> Mes_CrBatchSelect_SqlResultSetUbAsync(string mesServer, string mesDatabase, string sqlQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrCustomers_ListActive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrCustomers_ListActiveResponseMes_CrCustomers_ListActiveResult Mes_CrCustomers_ListActive(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrCustomers_ListActive", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrCustomers_ListActiveResponseMes_CrCustomers_ListActiveResult> Mes_CrCustomers_ListActiveAsync(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrCustomers_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrCustomers_SelectByNameResponseMes_CrCustomers_SelectByNameResult Mes_CrCustomers_SelectByName(string mesServer, string mesDatabase, string customerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrCustomers_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrCustomers_SelectByNameResponseMes_CrCustomers_SelectByNameResult> Mes_CrCustomers_SelectByNameAsync(string mesServer, string mesDatabase, string customerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrCustomerMaCostCenter_ListAvailableMa" +
            "s", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrCustomerMaCostCenter_ListAvailableMasResponseMes_CrCustomerMaCostCenter_ListAvailableMasResult Mes_CrCustomerMaCostCenter_ListAvailableMas(string mesServer, string mesDatabase, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrCustomerMaCostCenter_ListAvailableMa" +
            "s", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrCustomerMaCostCenter_ListAvailableMasResponseMes_CrCustomerMaCostCenter_ListAvailableMasResult> Mes_CrCustomerMaCostCenter_ListAvailableMasAsync(string mesServer, string mesDatabase, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrEquipment_ListStations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrEquipment_ListStationsResponseMes_CrEquipment_ListStationsResult Mes_CrEquipment_ListStations(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrEquipment_ListStations", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrEquipment_ListStationsResponseMes_CrEquipment_ListStationsResult> Mes_CrEquipment_ListStationsAsync(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrEquipment_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrEquipment_SelectByNameResponseMes_CrEquipment_SelectByNameResult Mes_CrEquipment_SelectByName(string mesServer, string mesDatabase, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrEquipment_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrEquipment_SelectByNameResponseMes_CrEquipment_SelectByNameResult> Mes_CrEquipment_SelectByNameAsync(string mesServer, string mesDatabase, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrEquipment_ListStationsByType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrEquipment_ListStationsByTypeResponseMes_CrEquipment_ListStationsByTypeResult Mes_CrEquipment_ListStationsByType(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrEquipment_ListStationsByType", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrEquipment_ListStationsByTypeResponseMes_CrEquipment_ListStationsByTypeResult> Mes_CrEquipment_ListStationsByTypeAsync(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFactoryMas_ListByFactory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrFactoryMas_ListByFactoryResponseMes_CrFactoryMas_ListByFactoryResult Mes_CrFactoryMas_ListByFactory(string mesServer, string mesDatabase, string factoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFactoryMas_ListByFactory", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrFactoryMas_ListByFactoryResponseMes_CrFactoryMas_ListByFactoryResult> Mes_CrFactoryMas_ListByFactoryAsync(string mesServer, string mesDatabase, string factoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFactoryMas_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrFactoryMas_SelectByNameResponseMes_CrFactoryMas_SelectByNameResult Mes_CrFactoryMas_SelectByName(string mesServer, string mesDatabase, string factoryName, string manArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFactoryMas_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrFactoryMas_SelectByNameResponseMes_CrFactoryMas_SelectByNameResult> Mes_CrFactoryMas_SelectByNameAsync(string mesServer, string mesDatabase, string factoryName, string manArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFactoryMas_ListAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrFactoryMas_ListAllResponseMes_CrFactoryMas_ListAllResult Mes_CrFactoryMas_ListAll(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFactoryMas_ListAll", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrFactoryMas_ListAllResponseMes_CrFactoryMas_ListAllResult> Mes_CrFactoryMas_ListAllAsync(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFactories_List", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrFactories_ListResponseMes_CrFactories_ListResult Mes_CrFactories_List(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFactories_List", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrFactories_ListResponseMes_CrFactories_ListResult> Mes_CrFactories_ListAsync(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFamilies_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrFamilies_SelectByNameResponseMes_CrFamilies_SelectByNameResult Mes_CrFamilies_SelectByName(string mesServer, string mesDatabase, string familyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFamilies_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrFamilies_SelectByNameResponseMes_CrFamilies_SelectByNameResult> Mes_CrFamilies_SelectByNameAsync(string mesServer, string mesDatabase, string familyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFamilies_ListByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrFamilies_ListByCustomerResponseMes_CrFamilies_ListByCustomerResult Mes_CrFamilies_ListByCustomer(string mesServer, string mesDatabase, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrFamilies_ListByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrFamilies_ListByCustomerResponseMes_CrFamilies_ListByCustomerResult> Mes_CrFamilies_ListByCustomerAsync(string mesServer, string mesDatabase, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrMaRoutes_ListByManufacturingArea", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrMaRoutes_ListByManufacturingAreaResponseMes_CrMaRoutes_ListByManufacturingAreaResult Mes_CrMaRoutes_ListByManufacturingArea(string mesServer, string mesDatabase, string areaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrMaRoutes_ListByManufacturingArea", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrMaRoutes_ListByManufacturingAreaResponseMes_CrMaRoutes_ListByManufacturingAreaResult> Mes_CrMaRoutes_ListByManufacturingAreaAsync(string mesServer, string mesDatabase, string areaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrMaRoutes_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrMaRoutes_SelectByNameResponseMes_CrMaRoutes_SelectByNameResult Mes_CrMaRoutes_SelectByName(string mesServer, string mesDatabase, string factoryName, string manArea, string route);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrMaRoutes_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrMaRoutes_SelectByNameResponseMes_CrMaRoutes_SelectByNameResult> Mes_CrMaRoutes_SelectByNameAsync(string mesServer, string mesDatabase, string factoryName, string manArea, string route);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrManufacturingAreas_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrManufacturingAreas_SelectByNameResponseMes_CrManufacturingAreas_SelectByNameResult Mes_CrManufacturingAreas_SelectByName(string mesServer, string mesDatabase, string manArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrManufacturingAreas_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrManufacturingAreas_SelectByNameResponseMes_CrManufacturingAreas_SelectByNameResult> Mes_CrManufacturingAreas_SelectByNameAsync(string mesServer, string mesDatabase, string manArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRoutes_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrRoutes_SelectByNameResponseMes_CrRoutes_SelectByNameResult Mes_CrRoutes_SelectByName(string mesServer, string mesDatabase, string route);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRoutes_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrRoutes_SelectByNameResponseMes_CrRoutes_SelectByNameResult> Mes_CrRoutes_SelectByNameAsync(string mesServer, string mesDatabase, string route);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRouteSteps_ListByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrRouteSteps_ListByCustomerResponseMes_CrRouteSteps_ListByCustomerResult Mes_CrRouteSteps_ListByCustomer(string mesServer, string mesDatabase, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRouteSteps_ListByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrRouteSteps_ListByCustomerResponseMes_CrRouteSteps_ListByCustomerResult> Mes_CrRouteSteps_ListByCustomerAsync(string mesServer, string mesDatabase, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRouteSteps_ListByRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrRouteSteps_ListByRouteResponseMes_CrRouteSteps_ListByRouteResult Mes_CrRouteSteps_ListByRoute(string mesServer, string mesDatabase, string routeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRouteSteps_ListByRoute", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrRouteSteps_ListByRouteResponseMes_CrRouteSteps_ListByRouteResult> Mes_CrRouteSteps_ListByRouteAsync(string mesServer, string mesDatabase, string routeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRouteSteps_SelectById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrRouteSteps_SelectByIdResponseMes_CrRouteSteps_SelectByIdResult Mes_CrRouteSteps_SelectById(string mesServer, string mesDatabase, string routeStepId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRouteSteps_SelectById", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrRouteSteps_SelectByIdResponseMes_CrRouteSteps_SelectByIdResult> Mes_CrRouteSteps_SelectByIdAsync(string mesServer, string mesDatabase, string routeStepId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRouteStepEquipment_ListByRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrRouteStepEquipment_ListByRouteResponseMes_CrRouteStepEquipment_ListByRouteResult Mes_CrRouteStepEquipment_ListByRoute(string mesServer, string mesDatabase, string routeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRouteStepEquipment_ListByRoute", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrRouteStepEquipment_ListByRouteResponseMes_CrRouteStepEquipment_ListByRouteResult> Mes_CrRouteStepEquipment_ListByRouteAsync(string mesServer, string mesDatabase, string routeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRouteStepEquipment_SelectByRouteStep" +
            "Id", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrRouteStepEquipment_SelectByRouteStepIdResponseMes_CrRouteStepEquipment_SelectByRouteStepIdResult Mes_CrRouteStepEquipment_SelectByRouteStepId(string mesServer, string mesDatabase, string routeStepId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrRouteStepEquipment_SelectByRouteStep" +
            "Id", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrRouteStepEquipment_SelectByRouteStepIdResponseMes_CrRouteStepEquipment_SelectByRouteStepIdResult> Mes_CrRouteStepEquipment_SelectByRouteStepIdAsync(string mesServer, string mesDatabase, string routeStepId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrSteps_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrSteps_SelectByNameResponseMes_CrSteps_SelectByNameResult Mes_CrSteps_SelectByName(string mesServer, string mesDatabase, string manArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrSteps_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrSteps_SelectByNameResponseMes_CrSteps_SelectByNameResult> Mes_CrSteps_SelectByNameAsync(string mesServer, string mesDatabase, string manArea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrSteps_List", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrSteps_ListResponseMes_CrSteps_ListResult Mes_CrSteps_List(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrSteps_List", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrSteps_ListResponseMes_CrSteps_ListResult> Mes_CrSteps_ListAsync(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrStepTypes_List", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrStepTypes_ListResponseMes_CrStepTypes_ListResult Mes_CrStepTypes_List(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrStepTypes_List", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrStepTypes_ListResponseMes_CrStepTypes_ListResult> Mes_CrStepTypes_ListAsync(string mesServer, string mesDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrTesters_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_CrTesters_SelectByNameResponseMes_CrTesters_SelectByNameResult Mes_CrTesters_SelectByName(string mesServer, string mesDatabase, string testerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_CrTesters_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_CrTesters_SelectByNameResponseMes_CrTesters_SelectByNameResult> Mes_CrTesters_SelectByNameAsync(string mesServer, string mesDatabase, string testerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_EpSerialization_GenerateSerialNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_EpSerialization_GenerateSerialNumberResponseMes_EpSerialization_GenerateSerialNumberResult Mes_EpSerialization_GenerateSerialNumber(string mesServer, string mesDatabase, int customerId, string serialNumberName, int quantity, bool exampleOnly, int userId, int assemblyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_EpSerialization_GenerateSerialNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_EpSerialization_GenerateSerialNumberResponseMes_EpSerialization_GenerateSerialNumberResult> Mes_EpSerialization_GenerateSerialNumberAsync(string mesServer, string mesDatabase, int customerId, string serialNumberName, int quantity, bool exampleOnly, int userId, int assemblyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpAssemblyRouteWip_ListAllByWipId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpAssemblyRouteWip_ListAllByWipIdResponseMes_WpAssemblyRouteWip_ListAllByWipIdResult Mes_WpAssemblyRouteWip_ListAllByWipId(string mesServer, string mesDatabase, int wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpAssemblyRouteWip_ListAllByWipId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpAssemblyRouteWip_ListAllByWipIdResponseMes_WpAssemblyRouteWip_ListAllByWipIdResult> Mes_WpAssemblyRouteWip_ListAllByWipIdAsync(string mesServer, string mesDatabase, int wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpAssemblyRouteWip_SelectBySerialNumbe" +
            "rAndCustomerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdResponseMes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdResult Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerId(string mesServer, string mesDatabase, string serialNumber, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpAssemblyRouteWip_SelectBySerialNumbe" +
            "rAndCustomerId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdResponseMes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdResult> Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdAsync(string mesServer, string mesDatabase, string serialNumber, string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpAssemblyRouteWip_SelectByWipId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpAssemblyRouteWip_SelectByWipIdResponseMes_WpAssemblyRouteWip_SelectByWipIdResult Mes_WpAssemblyRouteWip_SelectByWipId(string mesServer, string mesDatabase, string wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpAssemblyRouteWip_SelectByWipId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpAssemblyRouteWip_SelectByWipIdResponseMes_WpAssemblyRouteWip_SelectByWipIdResult> Mes_WpAssemblyRouteWip_SelectByWipIdAsync(string mesServer, string mesDatabase, string wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpAssemblyRouteWip_ListByBatchId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpAssemblyRouteWip_ListByBatchIdResponseMes_WpAssemblyRouteWip_ListByBatchIdResult Mes_WpAssemblyRouteWip_ListByBatchId(string mesServer, string mesDatabase, string batchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpAssemblyRouteWip_ListByBatchId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpAssemblyRouteWip_ListByBatchIdResponseMes_WpAssemblyRouteWip_ListByBatchIdResult> Mes_WpAssemblyRouteWip_ListByBatchIdAsync(string mesServer, string mesDatabase, string batchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpBatch_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpBatch_SelectByNameResponseMes_WpBatch_SelectByNameResult Mes_WpBatch_SelectByName(string mesServer, string mesDatabase, string batchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpBatch_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpBatch_SelectByNameResponseMes_WpBatch_SelectByNameResult> Mes_WpBatch_SelectByNameAsync(string mesServer, string mesDatabase, string batchName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpBatch_List", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpBatch_ListResponseMes_WpBatch_ListResult Mes_WpBatch_List(string mesServer, string mesDatabase, string partials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpBatch_List", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpBatch_ListResponseMes_WpBatch_ListResult> Mes_WpBatch_ListAsync(string mesServer, string mesDatabase, string partials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpBatch_SelectById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpBatch_SelectByIdResponseMes_WpBatch_SelectByIdResult Mes_WpBatch_SelectById(string mesServer, string mesDatabase, string batchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpBatch_SelectById", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpBatch_SelectByIdResponseMes_WpBatch_SelectByIdResult> Mes_WpBatch_SelectByIdAsync(string mesServer, string mesDatabase, string batchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpBatchAssemblies_ListAvailable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpBatchAssemblies_ListAvailableResponseMes_WpBatchAssemblies_ListAvailableResult Mes_WpBatchAssemblies_ListAvailable(string mesServer, string mesDatabase, string batchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpBatchAssemblies_ListAvailable", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpBatchAssemblies_ListAvailableResponseMes_WpBatchAssemblies_ListAvailableResult> Mes_WpBatchAssemblies_ListAvailableAsync(string mesServer, string mesDatabase, string batchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWip_SelectBySerialNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpWip_SelectBySerialNumberResponseMes_WpWip_SelectBySerialNumberResult Mes_WpWip_SelectBySerialNumber(string mesServer, string mesDatabase, string serialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWip_SelectBySerialNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpWip_SelectBySerialNumberResponseMes_WpWip_SelectBySerialNumberResult> Mes_WpWip_SelectBySerialNumberAsync(string mesServer, string mesDatabase, string serialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWip_GetLastTestStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpWip_GetLastTestStatusResponseMes_WpWip_GetLastTestStatusResult Mes_WpWip_GetLastTestStatus(string mesServer, string mesDatabase, int wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWip_GetLastTestStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpWip_GetLastTestStatusResponseMes_WpWip_GetLastTestStatusResult> Mes_WpWip_GetLastTestStatusAsync(string mesServer, string mesDatabase, int wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWip_ListCustomerAssembly", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpWip_ListCustomerAssemblyResponseMes_WpWip_ListCustomerAssemblyResult Mes_WpWip_ListCustomerAssembly(string mesServer, string mesDatabase, string serialNumber, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWip_ListCustomerAssembly", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpWip_ListCustomerAssemblyResponseMes_WpWip_ListCustomerAssemblyResult> Mes_WpWip_ListCustomerAssemblyAsync(string mesServer, string mesDatabase, string serialNumber, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWip_GetBirthStatusByWipId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpWip_GetBirthStatusByWipIdResponseMes_WpWip_GetBirthStatusByWipIdResult Mes_WpWip_GetBirthStatusByWipId(string mesServer, string mesDatabase, int wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWip_GetBirthStatusByWipId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpWip_GetBirthStatusByWipIdResponseMes_WpWip_GetBirthStatusByWipIdResult> Mes_WpWip_GetBirthStatusByWipIdAsync(string mesServer, string mesDatabase, int wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWip_GetBirthStatusBySerialNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpWip_GetBirthStatusBySerialNumberResponseMes_WpWip_GetBirthStatusBySerialNumberResult Mes_WpWip_GetBirthStatusBySerialNumber(string mesServer, string mesDatabase, string serialNumber, string customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWip_GetBirthStatusBySerialNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpWip_GetBirthStatusBySerialNumberResponseMes_WpWip_GetBirthStatusBySerialNumberResult> Mes_WpWip_GetBirthStatusBySerialNumberAsync(string mesServer, string mesDatabase, string serialNumber, string customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWipRouteSteps_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpWipRouteSteps_SelectByNameResponseMes_WpWipRouteSteps_SelectByNameResult Mes_WpWipRouteSteps_SelectByName(string mesServer, string mesDatabase, string serialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWipRouteSteps_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpWipRouteSteps_SelectByNameResponseMes_WpWipRouteSteps_SelectByNameResult> Mes_WpWipRouteSteps_SelectByNameAsync(string mesServer, string mesDatabase, string serialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWipRouteSteps_SelectByWipId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpWipRouteSteps_SelectByWipIdResponseMes_WpWipRouteSteps_SelectByWipIdResult Mes_WpWipRouteSteps_SelectByWipId(string mesServer, string mesDatabase, string wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWipRouteSteps_SelectByWipId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpWipRouteSteps_SelectByWipIdResponseMes_WpWipRouteSteps_SelectByWipIdResult> Mes_WpWipRouteSteps_SelectByWipIdAsync(string mesServer, string mesDatabase, string wipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWipRouteSteps_SelectByRouteStepId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_WpWipRouteSteps_SelectByRouteStepIdResponseMes_WpWipRouteSteps_SelectByRouteStepIdResult Mes_WpWipRouteSteps_SelectByRouteStepId(string mesServer, string mesDatabase, int routeStepId, string dateFrom, string dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_WpWipRouteSteps_SelectByRouteStepId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_WpWipRouteSteps_SelectByRouteStepIdResponseMes_WpWipRouteSteps_SelectByRouteStepIdResult> Mes_WpWipRouteSteps_SelectByRouteStepIdAsync(string mesServer, string mesDatabase, int routeStepId, string dateFrom, string dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmAssemblyProperties_SelectByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_QmAssemblyProperties_SelectByNameResponseMes_QmAssemblyProperties_SelectByNameResult Mes_QmAssemblyProperties_SelectByName(string mesServer, string mesDatabase, string assemblyText, string propertyText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmAssemblyProperties_SelectByName", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_QmAssemblyProperties_SelectByNameResponseMes_QmAssemblyProperties_SelectByNameResult> Mes_QmAssemblyProperties_SelectByNameAsync(string mesServer, string mesDatabase, string assemblyText, string propertyText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmAssemblyProperties_ListByAssembly", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_QmAssemblyProperties_ListByAssemblyResponseMes_QmAssemblyProperties_ListByAssemblyResult Mes_QmAssemblyProperties_ListByAssembly(string mesServer, string mesDatabase, string assemblyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmAssemblyProperties_ListByAssembly", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_QmAssemblyProperties_ListByAssemblyResponseMes_QmAssemblyProperties_ListByAssemblyResult> Mes_QmAssemblyProperties_ListByAssemblyAsync(string mesServer, string mesDatabase, string assemblyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmCustomerEpsCustomerDatabase_SelectBy" +
            "CustomerId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdResponseMes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdResult Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerId(string mesServer, string mesDatabase, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmCustomerEpsCustomerDatabase_SelectBy" +
            "CustomerId", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdResponseMes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdResult> Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdAsync(string mesServer, string mesDatabase, int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmCustomerConfiguration_SelectById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.Mes_QmCustomerConfiguration_SelectByIdResponseMes_QmCustomerConfiguration_SelectByIdResult Mes_QmCustomerConfiguration_SelectById(string mesServer, string mesDatabase, int customerId, string propertyKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Mes_QmCustomerConfiguration_SelectById", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.Mes_QmCustomerConfiguration_SelectByIdResponseMes_QmCustomerConfiguration_SelectByIdResult> Mes_QmCustomerConfiguration_SelectByIdAsync(string mesServer, string mesDatabase, int customerId, string propertyKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAllCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAllCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckSN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckSN(string Customer, string Assembly_NR, string Assembly_REV, string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckSN", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckSNAsync(string Customer, string Assembly_NR, string Assembly_REV, string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastAssemblyIDByRouteStep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLastAssemblyIDByRouteStep(string pstrRouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastAssemblyIDByRouteStep", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLastAssemblyIDByRouteStepAsync(string pstrRouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLastTest(string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastTest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLastTestAsync(string SerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastTestData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetLastTestData(string pSerialNumber, string pServerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLastTestData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetLastTestDataAsync(string pSerialNumber, string pServerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetDateTimeFromDataBase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDateTimeFromDataBase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetDateTimeFromDataBase", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetDateTimeFromDataBaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestHistoryByDateTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetTestHistoryByDateTime(string pCustomerID, string pSerialNumber, string pFromDate, string pToDate, string pRouteStepIDList, string pServerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestHistoryByDateTime", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetTestHistoryByDateTimeAsync(string pCustomerID, string pSerialNumber, string pFromDate, string pToDate, string pRouteStepIDList, string pServerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetDataLabelsBySerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetDataLabelsBySerialNo(string pCustomerName, string pSerialNumber, string pDataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetDataLabelsBySerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetDataLabelsBySerialNoAsync(string pCustomerName, string pSerialNumber, string pDataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetTestHistory(string pCustomerName, string pSerialNumber, string pTestList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetTestHistoryAsync(string pCustomerName, string pSerialNumber, string pTestList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestsBySerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetTestsBySerialNo(string pSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetTestsBySerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetTestsBySerialNoAsync(string pSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHistoryDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetBoardHistoryDS(string CustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHistoryDS", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBoardHistoryDSAsync(string CustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetHistoryByWipsDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetHistoryByWipsDS(string pWipsList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetHistoryByWipsDS", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetHistoryByWipsDSAsync(string pWipsList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckSerialNumberByCheckpoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckSerialNumberByCheckpoint(string pCustomer, string pCheckPoint, string pSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckSerialNumberByCheckpoint", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckSerialNumberByCheckpointAsync(string pCustomer, string pCheckPoint, string pSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Service_Status", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Service_Status(int sec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Service_Status", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Service_StatusAsync(int sec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Test", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/Test", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetParserData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetParserData(string CustomerName, string pstrSerialNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetParserData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetParserDataAsync(string CustomerName, string pstrSerialNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFamilyByAssemblyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetFamilyByAssemblyID(string pstrAssemblyID, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFamilyByAssemblyID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetFamilyByAssemblyIDAsync(string pstrAssemblyID, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFamilyByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetFamilyByCustomer(string pstrCustomerText, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFamilyByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetFamilyByCustomerAsync(string pstrCustomerText, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckAnalyze", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckAnalyze(string pstrSerialNo, string pSep, string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckAnalyze", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckAnalyzeAsync(string pstrSerialNo, string pSep, string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRoutesByMA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetRoutesByMA(string MA_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRoutesByMA", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetRoutesByMAAsync(string MA_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetAssemblyData(string pCustomer, string pAssemblylNo, string pAssemblyRev);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetAssemblyDataAsync(string pCustomer, string pAssemblylNo, string pAssemblyRev);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetEquipmentList(string pCustomerName, string pCommonName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentList", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetEquipmentListAsync(string pCustomerName, string pCommonName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRouteStepData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetRouteStepData(string pRouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRouteStepData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetRouteStepDataAsync(string pRouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRouteDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetAssembliesByRouteDS(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRouteDS", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetAssembliesByRouteDSAsync(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAssembliesByRoute(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRoute", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetAssembliesByRouteAsync(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRouteByCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAssembliesByRouteByCustomer(string RouteID, string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssembliesByRouteByCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetAssembliesByRouteByCustomerAsync(string RouteID, string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentByRouteStep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetEquipmentByRouteStep(string RouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentByRouteStep", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetEquipmentByRouteStepAsync(string RouteStepID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRouteStepsByRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetRouteStepsByRoute(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetRouteStepsByRoute", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetRouteStepsByRouteAsync(string RouteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetEquipmentData(string pEquipmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEquipmentData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetEquipmentDataAsync(string pEquipmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByLinkedMaterials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetSerialNoByLinkedMaterials(string pstrCustomer, string pLinkObject, string pLinkedNumber, int pLinkUnlink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByLinkedMaterials", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetSerialNoByLinkedMaterialsAsync(string pstrCustomer, string pLinkObject, string pLinkedNumber, int pLinkUnlink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEPSLinkedSerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetEPSLinkedSerialNo(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetEPSLinkedSerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetEPSLinkedSerialNoAsync(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLinkedValue(string pstrCustomer, string pstrSerialNo, string pstrLinkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedValue", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetLinkedValueAsync(string pstrCustomer, string pstrSerialNo, string pstrLinkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedValueDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetLinkedValueDS(string pstrCustomer, string pstrSerialNo, string pstrLinkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedValueDS", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetLinkedValueDSAsync(string pstrCustomer, string pstrSerialNo, string pstrLinkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedMaterials", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetLinkedMaterials(string pstrCustomer, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkedMaterials", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetLinkedMaterialsAsync(string pstrCustomer, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByShipOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSerialNoByShipOrder(string pstrCustomer, string pstrOrderNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByShipOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSerialNoByShipOrderAsync(string pstrCustomer, string pstrOrderNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByBox", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetSerialNoByBox(string pstrCustomer, string pstrBoxNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByBox", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetSerialNoByBoxAsync(string pstrCustomer, string pstrBoxNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoForBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetSerialNoForBatch(string pstrBatchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoForBatch", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetSerialNoForBatchAsync(string pstrBatchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoForBatchDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetSerialNoForBatchDS(string pstrBatchNo, string pMesRaportowy, string pOutputFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoForBatchDS", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetSerialNoForBatchDSAsync(string pstrBatchNo, string pMesRaportowy, string pOutputFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetWipCountByFamilyByRouteStep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetWipCountByFamilyByRouteStep(string FamilyID, string RouteStepID, string pDateFrom, string pDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetWipCountByFamilyByRouteStep", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetWipCountByFamilyByRouteStepAsync(string FamilyID, string RouteStepID, string pDateFrom, string pDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCParamByBatchNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCParamByBatchNo(string BatchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetCParamByBatchNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCParamByBatchNoAsync(string BatchNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAssemblyNo(string CustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAssemblyNoAsync(string CustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyProperty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAssemblyProperty(string pAssemblyNo, string pAssemblyRev, string pPropertyKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyProperty", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAssemblyPropertyAsync(string pAssemblyNo, string pAssemblyRev, string pPropertyKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBatchBySerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBatchBySerialNo(string SerialNo, string Customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBatchBySerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBatchBySerialNoAsync(string SerialNo, string Customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetWipCountByAssemblyByRouteStep", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetWipCountByAssemblyByRouteStep(string AssemblyID, string RouteStepID, string pDateFrom, string pDateTo, string pFirstEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetWipCountByAssemblyByRouteStep", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetWipCountByAssemblyByRouteStepAsync(string AssemblyID, string RouteStepID, string pDateFrom, string pDateTo, string pFirstEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMAbyCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetMAbyCustomer(string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMAbyCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetMAbyCustomerAsync(string CustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAnalysisData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetAnalysisData(string pCustomer, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAnalysisData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetAnalysisDataAsync(string pCustomer, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMeasuredData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetMeasuredData(string CustomerName, string pstrSerialNo, string pstrDataLabel, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMeasuredData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetMeasuredDataAsync(string CustomerName, string pstrSerialNo, string pstrDataLabel, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMeasuredDataBySerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetMeasuredDataBySerialNo(string pCustomerName, string pstrSerialNo, string pstrDataLabel, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetMeasuredDataBySerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetMeasuredDataBySerialNoAsync(string pCustomerName, string pstrSerialNo, string pstrDataLabel, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardAnalysis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBoardAnalysis(string CustomerName, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardAnalysis", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBoardAnalysisAsync(string CustomerName, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPalletContents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPalletContents(string pCustomer, string pstrDateFrom, string pstrDateTo, string pPalletStatus, string pAllEvents, string pShowBoards, string pstrFolderOut, string pSaveAs, string pFileExtension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPalletContents", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPalletContentsAsync(string pCustomer, string pstrDateFrom, string pstrDateTo, string pPalletStatus, string pAllEvents, string pShowBoards, string pstrFolderOut, string pSaveAs, string pFileExtension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckPalletByMeasuredDataByBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckPalletByMeasuredDataByBatch(string pCustomer, string pPalletNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckPalletByMeasuredDataByBatch", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckPalletByMeasuredDataByBatchAsync(string pCustomer, string pPalletNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckPalletByMeasuredData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CheckPalletByMeasuredData(string pCustomer, string pPalletNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CheckPalletByMeasuredData", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CheckPalletByMeasuredDataAsync(string pCustomer, string pPalletNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CustomerLineStepReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CustomerLineStepReport(string pCustomer, string pFactory, string pstrManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pReportServer, string pSaveAs, string pStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CustomerLineStepReport", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CustomerLineStepReportAsync(string pCustomer, string pFactory, string pstrManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pReportServer, string pSaveAs, string pStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPackedData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetPackedData(string pstrCustomer, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pSaveAs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetPackedData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetPackedDataAsync(string pstrCustomer, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pSaveAs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/WipCountByStepBySerialNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string WipCountByStepBySerialNo(string pstrManArea, string pstrRoute, string pstrStep, string pstrSerialNo, string pProductionServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/WipCountByStepBySerialNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> WipCountByStepBySerialNoAsync(string pstrManArea, string pstrRoute, string pstrStep, string pstrSerialNo, string pProductionServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CreateBackFlashSAP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateBackFlashSAP(string CustomerName, string pstrManArea, string pstrRoute, string pstrEquipment, string pstrFamily, string pstrDateFrom, string pstrDateTo, string pstrFolderOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/CreateBackFlashSAP", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateBackFlashSAPAsync(string CustomerName, string pstrManArea, string pstrRoute, string pstrEquipment, string pstrFamily, string pstrDateFrom, string pstrDateTo, string pstrFolderOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetListChangedBatch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetListChangedBatch(System.DateTime pDateFrom, string pExcludeCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetListChangedBatch", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetListChangedBatchAsync(System.DateTime pDateFrom, string pExcludeCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFirstTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetFirstTest(string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetFirstTest", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetFirstTestAsync(string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBoardData(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardData", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBoardDataAsync(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyDataByBoardDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetAssemblyDataByBoardDS(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetAssemblyDataByBoardDS", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetAssemblyDataByBoardDSAsync(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByLinkedData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetSerialNoByLinkedData(int customerId, string dateFromString, string dateToString, int linkObjectId, string linkedValue, int uniqueLink, int showUnlinkedSn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetSerialNoByLinkedData", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetSerialNoByLinkedDataAsync(int customerId, string dateFromString, string dateToString, int linkObjectId, string linkedValue, int uniqueLink, int showUnlinkedSn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkObjectDS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetLinkObjectDS(string customer, string linkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLinkObjectDS", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetLinkObjectDSAsync(string customer, string linkObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetBoardHistory(string CustomerName, string pstrSerialNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoardHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetBoardHistoryAsync(string CustomerName, string pstrSerialNo, string pSep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxHeader", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetBoxHeader(string pCustomerName, string pstrBoxNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxHeader", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBoxHeaderAsync(string pCustomerName, string pstrBoxNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLineStepReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MESwebservice.ArrayOfXElement GetLineStepReport(string pCustomer, string pFactory, string pManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pStatus, string pReportServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetLineStepReport", ReplyAction="*")]
        System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetLineStepReportAsync(string pCustomer, string pFactory, string pManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pStatus, string pReportServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBoxNumber(string pCustomerName, string pstrSerialNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MesServiceKS/Boards/GetBoxNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBoxNumberAsync(string pCustomerName, string pstrSerialNo);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_QmDataAnalysis_ListByWipIdResponseMes_QmDataAnalysis_ListByWipIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_QmFailureData_ListByCustomerIdResponseMes_QmFailureData_ListByCustomerIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_QmTestDataHeader_SelectBySerialNumberResponseMes_QmTestDataHeader_SelectBySerialNumberResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_QmPvRules_EpsProcessVerifyResponseMes_QmPvRules_EpsProcessVerifyResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Eps_CrContainers_GetBoxContentsResponseEps_CrContainers_GetBoxContentsResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Jems_EpLinking_GetLinkedDataResponseJems_EpLinking_GetLinkedDataResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Jems_QmMeasuredData_ListByWipIdResponseJems_QmMeasuredData_ListByWipIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrAssemblies_SelectByIdResponseMes_CrAssemblies_SelectByIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrAssemblies_SelectByNameResponseMes_CrAssemblies_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrAssemblies_ListActiveByCustomerResponseMes_CrAssemblies_ListActiveByCustomerResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrAssemblyRoutes_ListActiveByRouteResponseMes_CrAssemblyRoutes_ListActiveByRouteResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrAssemblyRoutes_ListActiveByRouteByCustomerResponseMes_CrAssemblyRoutes_ListActiveByRouteByCustomerResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrAssemblyRoutes_ListAssembliesByMaResponseMes_CrAssemblyRoutes_ListAssembliesByMaResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrBatchSelect_SqlResultSetUbResponseMes_CrBatchSelect_SqlResultSetUbResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrCustomers_ListActiveResponseMes_CrCustomers_ListActiveResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrCustomers_SelectByNameResponseMes_CrCustomers_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrCustomerMaCostCenter_ListAvailableMasResponseMes_CrCustomerMaCostCenter_ListAvailableMasResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrEquipment_ListStationsResponseMes_CrEquipment_ListStationsResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrEquipment_SelectByNameResponseMes_CrEquipment_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrEquipment_ListStationsByTypeResponseMes_CrEquipment_ListStationsByTypeResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrFactoryMas_ListByFactoryResponseMes_CrFactoryMas_ListByFactoryResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrFactoryMas_SelectByNameResponseMes_CrFactoryMas_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrFactoryMas_ListAllResponseMes_CrFactoryMas_ListAllResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrFactories_ListResponseMes_CrFactories_ListResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrFamilies_SelectByNameResponseMes_CrFamilies_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrFamilies_ListByCustomerResponseMes_CrFamilies_ListByCustomerResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrMaRoutes_ListByManufacturingAreaResponseMes_CrMaRoutes_ListByManufacturingAreaResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrMaRoutes_SelectByNameResponseMes_CrMaRoutes_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrManufacturingAreas_SelectByNameResponseMes_CrManufacturingAreas_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrRoutes_SelectByNameResponseMes_CrRoutes_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrRouteSteps_ListByCustomerResponseMes_CrRouteSteps_ListByCustomerResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrRouteSteps_ListByRouteResponseMes_CrRouteSteps_ListByRouteResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrRouteSteps_SelectByIdResponseMes_CrRouteSteps_SelectByIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrRouteStepEquipment_ListByRouteResponseMes_CrRouteStepEquipment_ListByRouteResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrRouteStepEquipment_SelectByRouteStepIdResponseMes_CrRouteStepEquipment_SelectByRouteStepIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrSteps_SelectByNameResponseMes_CrSteps_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrSteps_ListResponseMes_CrSteps_ListResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrStepTypes_ListResponseMes_CrStepTypes_ListResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_CrTesters_SelectByNameResponseMes_CrTesters_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_EpSerialization_GenerateSerialNumberResponseMes_EpSerialization_GenerateSerialNumberResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpAssemblyRouteWip_ListAllByWipIdResponseMes_WpAssemblyRouteWip_ListAllByWipIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdResponseMes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpAssemblyRouteWip_SelectByWipIdResponseMes_WpAssemblyRouteWip_SelectByWipIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpAssemblyRouteWip_ListByBatchIdResponseMes_WpAssemblyRouteWip_ListByBatchIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpBatch_SelectByNameResponseMes_WpBatch_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpBatch_ListResponseMes_WpBatch_ListResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpBatch_SelectByIdResponseMes_WpBatch_SelectByIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpBatchAssemblies_ListAvailableResponseMes_WpBatchAssemblies_ListAvailableResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpWip_SelectBySerialNumberResponseMes_WpWip_SelectBySerialNumberResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpWip_GetLastTestStatusResponseMes_WpWip_GetLastTestStatusResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpWip_ListCustomerAssemblyResponseMes_WpWip_ListCustomerAssemblyResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpWip_GetBirthStatusByWipIdResponseMes_WpWip_GetBirthStatusByWipIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpWip_GetBirthStatusBySerialNumberResponseMes_WpWip_GetBirthStatusBySerialNumberResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpWipRouteSteps_SelectByNameResponseMes_WpWipRouteSteps_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpWipRouteSteps_SelectByWipIdResponseMes_WpWipRouteSteps_SelectByWipIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_WpWipRouteSteps_SelectByRouteStepIdResponseMes_WpWipRouteSteps_SelectByRouteStepIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_QmAssemblyProperties_SelectByNameResponseMes_QmAssemblyProperties_SelectByNameResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_QmAssemblyProperties_ListByAssemblyResponseMes_QmAssemblyProperties_ListByAssemblyResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdResponseMes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/MesServiceKS/Boards/")]
    public partial class Mes_QmCustomerConfiguration_SelectByIdResponseMes_QmCustomerConfiguration_SelectByIdResult
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface BoardsSoapChannel : MESwebservice.BoardsSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class BoardsSoapClient : System.ServiceModel.ClientBase<MESwebservice.BoardsSoap>, MESwebservice.BoardsSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BoardsSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(BoardsSoapClient.GetBindingForEndpoint(endpointConfiguration), BoardsSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BoardsSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BoardsSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BoardsSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BoardsSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BoardsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MESwebservice.Mes_QmDataAnalysis_ListByWipIdResponseMes_QmDataAnalysis_ListByWipIdResult Mes_QmDataAnalysis_ListByWipId(string mesServer, string mesDatabase, int wipId)
        {
            return base.Channel.Mes_QmDataAnalysis_ListByWipId(mesServer, mesDatabase, wipId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_QmDataAnalysis_ListByWipIdResponseMes_QmDataAnalysis_ListByWipIdResult> Mes_QmDataAnalysis_ListByWipIdAsync(string mesServer, string mesDatabase, int wipId)
        {
            return base.Channel.Mes_QmDataAnalysis_ListByWipIdAsync(mesServer, mesDatabase, wipId);
        }
        
        public MESwebservice.Mes_QmFailureData_ListByCustomerIdResponseMes_QmFailureData_ListByCustomerIdResult Mes_QmFailureData_ListByCustomerId(string mesServer, string mesDatabase, int customerId)
        {
            return base.Channel.Mes_QmFailureData_ListByCustomerId(mesServer, mesDatabase, customerId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_QmFailureData_ListByCustomerIdResponseMes_QmFailureData_ListByCustomerIdResult> Mes_QmFailureData_ListByCustomerIdAsync(string mesServer, string mesDatabase, int customerId)
        {
            return base.Channel.Mes_QmFailureData_ListByCustomerIdAsync(mesServer, mesDatabase, customerId);
        }
        
        public MESwebservice.Mes_QmTestDataHeader_SelectBySerialNumberResponseMes_QmTestDataHeader_SelectBySerialNumberResult Mes_QmTestDataHeader_SelectBySerialNumber(string mesServer, string mesDatabase, string serialNumber)
        {
            return base.Channel.Mes_QmTestDataHeader_SelectBySerialNumber(mesServer, mesDatabase, serialNumber);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_QmTestDataHeader_SelectBySerialNumberResponseMes_QmTestDataHeader_SelectBySerialNumberResult> Mes_QmTestDataHeader_SelectBySerialNumberAsync(string mesServer, string mesDatabase, string serialNumber)
        {
            return base.Channel.Mes_QmTestDataHeader_SelectBySerialNumberAsync(mesServer, mesDatabase, serialNumber);
        }
        
        public MESwebservice.Mes_QmPvRules_EpsProcessVerifyResponseMes_QmPvRules_EpsProcessVerifyResult Mes_QmPvRules_EpsProcessVerify(string mesServer, string mesDatabase, string assemblyNo, string assemblyRev, string serialNumber, string customerId, string checkPoint)
        {
            return base.Channel.Mes_QmPvRules_EpsProcessVerify(mesServer, mesDatabase, assemblyNo, assemblyRev, serialNumber, customerId, checkPoint);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_QmPvRules_EpsProcessVerifyResponseMes_QmPvRules_EpsProcessVerifyResult> Mes_QmPvRules_EpsProcessVerifyAsync(string mesServer, string mesDatabase, string assemblyNo, string assemblyRev, string serialNumber, string customerId, string checkPoint)
        {
            return base.Channel.Mes_QmPvRules_EpsProcessVerifyAsync(mesServer, mesDatabase, assemblyNo, assemblyRev, serialNumber, customerId, checkPoint);
        }
        
        public MESwebservice.Eps_CrContainers_GetBoxContentsResponseEps_CrContainers_GetBoxContentsResult Eps_CrContainers_GetBoxContents(string mesServer, string mesDatabase, string mesUser, int customerId, string boxNumber)
        {
            return base.Channel.Eps_CrContainers_GetBoxContents(mesServer, mesDatabase, mesUser, customerId, boxNumber);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Eps_CrContainers_GetBoxContentsResponseEps_CrContainers_GetBoxContentsResult> Eps_CrContainers_GetBoxContentsAsync(string mesServer, string mesDatabase, string mesUser, int customerId, string boxNumber)
        {
            return base.Channel.Eps_CrContainers_GetBoxContentsAsync(mesServer, mesDatabase, mesUser, customerId, boxNumber);
        }
        
        public MESwebservice.Jems_EpLinking_GetLinkedDataResponseJems_EpLinking_GetLinkedDataResult Jems_EpLinking_GetLinkedData(string mesServer, string mesDatabase, string mesUser, string wipId)
        {
            return base.Channel.Jems_EpLinking_GetLinkedData(mesServer, mesDatabase, mesUser, wipId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Jems_EpLinking_GetLinkedDataResponseJems_EpLinking_GetLinkedDataResult> Jems_EpLinking_GetLinkedDataAsync(string mesServer, string mesDatabase, string mesUser, string wipId)
        {
            return base.Channel.Jems_EpLinking_GetLinkedDataAsync(mesServer, mesDatabase, mesUser, wipId);
        }
        
        public MESwebservice.Jems_QmMeasuredData_ListByWipIdResponseJems_QmMeasuredData_ListByWipIdResult Jems_QmMeasuredData_ListByWipId(string mesServer, string mesDatabase, string mesUser, string wipId, string customerId)
        {
            return base.Channel.Jems_QmMeasuredData_ListByWipId(mesServer, mesDatabase, mesUser, wipId, customerId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Jems_QmMeasuredData_ListByWipIdResponseJems_QmMeasuredData_ListByWipIdResult> Jems_QmMeasuredData_ListByWipIdAsync(string mesServer, string mesDatabase, string mesUser, string wipId, string customerId)
        {
            return base.Channel.Jems_QmMeasuredData_ListByWipIdAsync(mesServer, mesDatabase, mesUser, wipId, customerId);
        }
        
        public MESwebservice.ArrayOfXElement GetBoxData(string pCustomerName, string pstrSerialNo)
        {
            return base.Channel.GetBoxData(pCustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBoxDataAsync(string pCustomerName, string pstrSerialNo)
        {
            return base.Channel.GetBoxDataAsync(pCustomerName, pstrSerialNo);
        }
        
        public MESwebservice.ArrayOfXElement ShippingReport(string pCustomer, int pLotID)
        {
            return base.Channel.ShippingReport(pCustomer, pLotID);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ShippingReportAsync(string pCustomer, int pLotID)
        {
            return base.Channel.ShippingReportAsync(pCustomer, pLotID);
        }
        
        public MESwebservice.ArrayOfXElement ShippingReportRenesola(string pCustomer, int pLotID)
        {
            return base.Channel.ShippingReportRenesola(pCustomer, pLotID);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ShippingReportRenesolaAsync(string pCustomer, int pLotID)
        {
            return base.Channel.ShippingReportRenesolaAsync(pCustomer, pLotID);
        }
        
        public MESwebservice.ArrayOfXElement ShippingReport_2(string pCustomer, int pLotID)
        {
            return base.Channel.ShippingReport_2(pCustomer, pLotID);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ShippingReport_2Async(string pCustomer, int pLotID)
        {
            return base.Channel.ShippingReport_2Async(pCustomer, pLotID);
        }
        
        public MESwebservice.ArrayOfXElement GetBatchHeader(string BatchNumber)
        {
            return base.Channel.GetBatchHeader(BatchNumber);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBatchHeaderAsync(string BatchNumber)
        {
            return base.Channel.GetBatchHeaderAsync(BatchNumber);
        }
        
        public string TransformString(string pSourceValue, string pFormat)
        {
            return base.Channel.TransformString(pSourceValue, pFormat);
        }
        
        public System.Threading.Tasks.Task<string> TransformStringAsync(string pSourceValue, string pFormat)
        {
            return base.Channel.TransformStringAsync(pSourceValue, pFormat);
        }
        
        public MESwebservice.ArrayOfXElement HANWHA_ContainerData(string pstrCustomer, string palletNo, string sSO_NO)
        {
            return base.Channel.HANWHA_ContainerData(pstrCustomer, palletNo, sSO_NO);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> HANWHA_ContainerDataAsync(string pstrCustomer, string palletNo, string sSO_NO)
        {
            return base.Channel.HANWHA_ContainerDataAsync(pstrCustomer, palletNo, sSO_NO);
        }
        
        public MESwebservice.ArrayOfXElement GetMaterialData(string MaterialName)
        {
            return base.Channel.GetMaterialData(MaterialName);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetMaterialDataAsync(string MaterialName)
        {
            return base.Channel.GetMaterialDataAsync(MaterialName);
        }
        
        public MESwebservice.ArrayOfXElement HANWHA_StockEDIReport_Day(string pstrCustomer, string PalletList)
        {
            return base.Channel.HANWHA_StockEDIReport_Day(pstrCustomer, PalletList);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> HANWHA_StockEDIReport_DayAsync(string pstrCustomer, string PalletList)
        {
            return base.Channel.HANWHA_StockEDIReport_DayAsync(pstrCustomer, PalletList);
        }
        
        public MESwebservice.ArrayOfXElement HANWHA_EDIReport_Day(string pstrCustomer, string PalletList, long LotID)
        {
            return base.Channel.HANWHA_EDIReport_Day(pstrCustomer, PalletList, LotID);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> HANWHA_EDIReport_DayAsync(string pstrCustomer, string PalletList, long LotID)
        {
            return base.Channel.HANWHA_EDIReport_DayAsync(pstrCustomer, PalletList, LotID);
        }
        
        public MESwebservice.ArrayOfXElement HANWHA_ProductionEDIReport_Day(string pstrCustomer, string pstrSourceFileName, string pstrSourcePath)
        {
            return base.Channel.HANWHA_ProductionEDIReport_Day(pstrCustomer, pstrSourceFileName, pstrSourcePath);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> HANWHA_ProductionEDIReport_DayAsync(string pstrCustomer, string pstrSourceFileName, string pstrSourcePath)
        {
            return base.Channel.HANWHA_ProductionEDIReport_DayAsync(pstrCustomer, pstrSourceFileName, pstrSourcePath);
        }
        
        public MESwebservice.ArrayOfXElement GetBoxContentsWithMeasuredData(string pCustomer, string pBoxNo, string pMeasuredLabel)
        {
            return base.Channel.GetBoxContentsWithMeasuredData(pCustomer, pBoxNo, pMeasuredLabel);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBoxContentsWithMeasuredDataAsync(string pCustomer, string pBoxNo, string pMeasuredLabel)
        {
            return base.Channel.GetBoxContentsWithMeasuredDataAsync(pCustomer, pBoxNo, pMeasuredLabel);
        }
        
        public MESwebservice.ArrayOfXElement RENESOLA_EDIReport_Day(string pstrCustomer, string BoxesList, int LotID)
        {
            return base.Channel.RENESOLA_EDIReport_Day(pstrCustomer, BoxesList, LotID);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> RENESOLA_EDIReport_DayAsync(string pstrCustomer, string BoxesList, int LotID)
        {
            return base.Channel.RENESOLA_EDIReport_DayAsync(pstrCustomer, BoxesList, LotID);
        }
        
        public MESwebservice.ArrayOfXElement GetBoardHeader(string CustomerName, string SerialNumber)
        {
            return base.Channel.GetBoardHeader(CustomerName, SerialNumber);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBoardHeaderAsync(string CustomerName, string SerialNumber)
        {
            return base.Channel.GetBoardHeaderAsync(CustomerName, SerialNumber);
        }
        
        public MESwebservice.ArrayOfXElement VerifySetupSheetDS(string AssemblyID, string RouteStepID, string EquipmentID, string SetupType)
        {
            return base.Channel.VerifySetupSheetDS(AssemblyID, RouteStepID, EquipmentID, SetupType);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> VerifySetupSheetDSAsync(string AssemblyID, string RouteStepID, string EquipmentID, string SetupType)
        {
            return base.Channel.VerifySetupSheetDSAsync(AssemblyID, RouteStepID, EquipmentID, SetupType);
        }
        
        public string VerifySetupSheet(int AssemblyID, int RouteStepID, int EquipmentID, int SetupType)
        {
            return base.Channel.VerifySetupSheet(AssemblyID, RouteStepID, EquipmentID, SetupType);
        }
        
        public System.Threading.Tasks.Task<string> VerifySetupSheetAsync(int AssemblyID, int RouteStepID, int EquipmentID, int SetupType)
        {
            return base.Channel.VerifySetupSheetAsync(AssemblyID, RouteStepID, EquipmentID, SetupType);
        }
        
        public MESwebservice.ArrayOfXElement GetGRNData(string GRNNumber)
        {
            return base.Channel.GetGRNData(GRNNumber);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetGRNDataAsync(string GRNNumber)
        {
            return base.Channel.GetGRNDataAsync(GRNNumber);
        }
        
        public int GetQtyByBatchRouteStep(string BatchNumber, string RouteStepName)
        {
            return base.Channel.GetQtyByBatchRouteStep(BatchNumber, RouteStepName);
        }
        
        public System.Threading.Tasks.Task<int> GetQtyByBatchRouteStepAsync(string BatchNumber, string RouteStepName)
        {
            return base.Channel.GetQtyByBatchRouteStepAsync(BatchNumber, RouteStepName);
        }
        
        public int GetQtyByBatchRouteStepSum(string BatchNumber, string RouteStepName)
        {
            return base.Channel.GetQtyByBatchRouteStepSum(BatchNumber, RouteStepName);
        }
        
        public System.Threading.Tasks.Task<int> GetQtyByBatchRouteStepSumAsync(string BatchNumber, string RouteStepName)
        {
            return base.Channel.GetQtyByBatchRouteStepSumAsync(BatchNumber, RouteStepName);
        }
        
        public MESwebservice.ArrayOfXElement ListCRDMaterials(int AssemblyID)
        {
            return base.Channel.ListCRDMaterials(AssemblyID);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ListCRDMaterialsAsync(int AssemblyID)
        {
            return base.Channel.ListCRDMaterialsAsync(AssemblyID);
        }
        
        public MESwebservice.ArrayOfXElement ListNotFullyBoxes(string pCustomer, string pAssemblyNo, string pAssemblyRev, string pFullPathFile)
        {
            return base.Channel.ListNotFullyBoxes(pCustomer, pAssemblyNo, pAssemblyRev, pFullPathFile);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ListNotFullyBoxesAsync(string pCustomer, string pAssemblyNo, string pAssemblyRev, string pFullPathFile)
        {
            return base.Channel.ListNotFullyBoxesAsync(pCustomer, pAssemblyNo, pAssemblyRev, pFullPathFile);
        }
        
        public MESwebservice.ArrayOfXElement ListBoxLineNumbers(string pCustomer, string pBoxNo, string pFullPathFile)
        {
            return base.Channel.ListBoxLineNumbers(pCustomer, pBoxNo, pFullPathFile);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ListBoxLineNumbersAsync(string pCustomer, string pBoxNo, string pFullPathFile)
        {
            return base.Channel.ListBoxLineNumbersAsync(pCustomer, pBoxNo, pFullPathFile);
        }
        
        public MESwebservice.ArrayOfXElement ListPanelsBoards(int pCustomerID, string pSerialNo)
        {
            return base.Channel.ListPanelsBoards(pCustomerID, pSerialNo);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ListPanelsBoardsAsync(int pCustomerID, string pSerialNo)
        {
            return base.Channel.ListPanelsBoardsAsync(pCustomerID, pSerialNo);
        }
        
        public MESwebservice.ArrayOfXElement GetCustomerData(string pCustomer)
        {
            return base.Channel.GetCustomerData(pCustomer);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetCustomerDataAsync(string pCustomer)
        {
            return base.Channel.GetCustomerDataAsync(pCustomer);
        }
        
        public MESwebservice.ArrayOfXElement ProcessVerify(string pCustomer, string pSerialNumber, string pCheckPoint)
        {
            return base.Channel.ProcessVerify(pCustomer, pSerialNumber, pCheckPoint);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ProcessVerifyAsync(string pCustomer, string pSerialNumber, string pCheckPoint)
        {
            return base.Channel.ProcessVerifyAsync(pCustomer, pSerialNumber, pCheckPoint);
        }
        
        public MESwebservice.ArrayOfXElement ListUsersByGroup(string pGroupName, string pFullPathFile)
        {
            return base.Channel.ListUsersByGroup(pGroupName, pFullPathFile);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> ListUsersByGroupAsync(string pGroupName, string pFullPathFile)
        {
            return base.Channel.ListUsersByGroupAsync(pGroupName, pFullPathFile);
        }
        
        public string CreateSerialNumber(int pCustomerID, string pSerialNumberName, string pSerialQuantity, string pAssemblyID, string pSerialSeparator, string pTestOnly)
        {
            return base.Channel.CreateSerialNumber(pCustomerID, pSerialNumberName, pSerialQuantity, pAssemblyID, pSerialSeparator, pTestOnly);
        }
        
        public System.Threading.Tasks.Task<string> CreateSerialNumberAsync(int pCustomerID, string pSerialNumberName, string pSerialQuantity, string pAssemblyID, string pSerialSeparator, string pTestOnly)
        {
            return base.Channel.CreateSerialNumberAsync(pCustomerID, pSerialNumberName, pSerialQuantity, pAssemblyID, pSerialSeparator, pTestOnly);
        }
        
        public MESwebservice.ArrayOfXElement GetPalletBoxesContents(int pCustomerID, string PalletNumber)
        {
            return base.Channel.GetPalletBoxesContents(pCustomerID, PalletNumber);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetPalletBoxesContentsAsync(int pCustomerID, string PalletNumber)
        {
            return base.Channel.GetPalletBoxesContentsAsync(pCustomerID, PalletNumber);
        }
        
        public string CheckSerialNumberByCheckpointEPS(string pCustomer, string pCheckPoint, string pSerialNumber)
        {
            return base.Channel.CheckSerialNumberByCheckpointEPS(pCustomer, pCheckPoint, pSerialNumber);
        }
        
        public System.Threading.Tasks.Task<string> CheckSerialNumberByCheckpointEPSAsync(string pCustomer, string pCheckPoint, string pSerialNumber)
        {
            return base.Channel.CheckSerialNumberByCheckpointEPSAsync(pCustomer, pCheckPoint, pSerialNumber);
        }
        
        public MESwebservice.Mes_CrAssemblies_SelectByIdResponseMes_CrAssemblies_SelectByIdResult Mes_CrAssemblies_SelectById(string mesServer, string mesDatabase, int assemblyId)
        {
            return base.Channel.Mes_CrAssemblies_SelectById(mesServer, mesDatabase, assemblyId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblies_SelectByIdResponseMes_CrAssemblies_SelectByIdResult> Mes_CrAssemblies_SelectByIdAsync(string mesServer, string mesDatabase, int assemblyId)
        {
            return base.Channel.Mes_CrAssemblies_SelectByIdAsync(mesServer, mesDatabase, assemblyId);
        }
        
        public MESwebservice.Mes_CrAssemblies_SelectByNameResponseMes_CrAssemblies_SelectByNameResult Mes_CrAssemblies_SelectByName(string mesServer, string mesDatabase, string assemblyNo, string assemblyRev)
        {
            return base.Channel.Mes_CrAssemblies_SelectByName(mesServer, mesDatabase, assemblyNo, assemblyRev);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblies_SelectByNameResponseMes_CrAssemblies_SelectByNameResult> Mes_CrAssemblies_SelectByNameAsync(string mesServer, string mesDatabase, string assemblyNo, string assemblyRev)
        {
            return base.Channel.Mes_CrAssemblies_SelectByNameAsync(mesServer, mesDatabase, assemblyNo, assemblyRev);
        }
        
        public MESwebservice.Mes_CrAssemblies_ListActiveByCustomerResponseMes_CrAssemblies_ListActiveByCustomerResult Mes_CrAssemblies_ListActiveByCustomer(string mesServer, string mesDatabase, int customerId, string partials)
        {
            return base.Channel.Mes_CrAssemblies_ListActiveByCustomer(mesServer, mesDatabase, customerId, partials);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblies_ListActiveByCustomerResponseMes_CrAssemblies_ListActiveByCustomerResult> Mes_CrAssemblies_ListActiveByCustomerAsync(string mesServer, string mesDatabase, int customerId, string partials)
        {
            return base.Channel.Mes_CrAssemblies_ListActiveByCustomerAsync(mesServer, mesDatabase, customerId, partials);
        }
        
        public MESwebservice.Mes_CrAssemblyRoutes_ListActiveByRouteResponseMes_CrAssemblyRoutes_ListActiveByRouteResult Mes_CrAssemblyRoutes_ListActiveByRoute(string mesServer, string mesDatabase, string routeId, string partials)
        {
            return base.Channel.Mes_CrAssemblyRoutes_ListActiveByRoute(mesServer, mesDatabase, routeId, partials);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblyRoutes_ListActiveByRouteResponseMes_CrAssemblyRoutes_ListActiveByRouteResult> Mes_CrAssemblyRoutes_ListActiveByRouteAsync(string mesServer, string mesDatabase, string routeId, string partials)
        {
            return base.Channel.Mes_CrAssemblyRoutes_ListActiveByRouteAsync(mesServer, mesDatabase, routeId, partials);
        }
        
        public MESwebservice.Mes_CrAssemblyRoutes_ListActiveByRouteByCustomerResponseMes_CrAssemblyRoutes_ListActiveByRouteByCustomerResult Mes_CrAssemblyRoutes_ListActiveByRouteByCustomer(string mesServer, string mesDatabase, string routeId, int customerId)
        {
            return base.Channel.Mes_CrAssemblyRoutes_ListActiveByRouteByCustomer(mesServer, mesDatabase, routeId, customerId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblyRoutes_ListActiveByRouteByCustomerResponseMes_CrAssemblyRoutes_ListActiveByRouteByCustomerResult> Mes_CrAssemblyRoutes_ListActiveByRouteByCustomerAsync(string mesServer, string mesDatabase, string routeId, int customerId)
        {
            return base.Channel.Mes_CrAssemblyRoutes_ListActiveByRouteByCustomerAsync(mesServer, mesDatabase, routeId, customerId);
        }
        
        public MESwebservice.Mes_CrAssemblyRoutes_ListAssembliesByMaResponseMes_CrAssemblyRoutes_ListAssembliesByMaResult Mes_CrAssemblyRoutes_ListAssembliesByMa(string mesServer, string mesDatabase, int factoryMaId, string customerId)
        {
            return base.Channel.Mes_CrAssemblyRoutes_ListAssembliesByMa(mesServer, mesDatabase, factoryMaId, customerId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrAssemblyRoutes_ListAssembliesByMaResponseMes_CrAssemblyRoutes_ListAssembliesByMaResult> Mes_CrAssemblyRoutes_ListAssembliesByMaAsync(string mesServer, string mesDatabase, int factoryMaId, string customerId)
        {
            return base.Channel.Mes_CrAssemblyRoutes_ListAssembliesByMaAsync(mesServer, mesDatabase, factoryMaId, customerId);
        }
        
        public MESwebservice.Mes_CrBatchSelect_SqlResultSetUbResponseMes_CrBatchSelect_SqlResultSetUbResult Mes_CrBatchSelect_SqlResultSetUb(string mesServer, string mesDatabase, string sqlQuery)
        {
            return base.Channel.Mes_CrBatchSelect_SqlResultSetUb(mesServer, mesDatabase, sqlQuery);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrBatchSelect_SqlResultSetUbResponseMes_CrBatchSelect_SqlResultSetUbResult> Mes_CrBatchSelect_SqlResultSetUbAsync(string mesServer, string mesDatabase, string sqlQuery)
        {
            return base.Channel.Mes_CrBatchSelect_SqlResultSetUbAsync(mesServer, mesDatabase, sqlQuery);
        }
        
        public MESwebservice.Mes_CrCustomers_ListActiveResponseMes_CrCustomers_ListActiveResult Mes_CrCustomers_ListActive(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrCustomers_ListActive(mesServer, mesDatabase);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrCustomers_ListActiveResponseMes_CrCustomers_ListActiveResult> Mes_CrCustomers_ListActiveAsync(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrCustomers_ListActiveAsync(mesServer, mesDatabase);
        }
        
        public MESwebservice.Mes_CrCustomers_SelectByNameResponseMes_CrCustomers_SelectByNameResult Mes_CrCustomers_SelectByName(string mesServer, string mesDatabase, string customerName)
        {
            return base.Channel.Mes_CrCustomers_SelectByName(mesServer, mesDatabase, customerName);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrCustomers_SelectByNameResponseMes_CrCustomers_SelectByNameResult> Mes_CrCustomers_SelectByNameAsync(string mesServer, string mesDatabase, string customerName)
        {
            return base.Channel.Mes_CrCustomers_SelectByNameAsync(mesServer, mesDatabase, customerName);
        }
        
        public MESwebservice.Mes_CrCustomerMaCostCenter_ListAvailableMasResponseMes_CrCustomerMaCostCenter_ListAvailableMasResult Mes_CrCustomerMaCostCenter_ListAvailableMas(string mesServer, string mesDatabase, int customerId)
        {
            return base.Channel.Mes_CrCustomerMaCostCenter_ListAvailableMas(mesServer, mesDatabase, customerId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrCustomerMaCostCenter_ListAvailableMasResponseMes_CrCustomerMaCostCenter_ListAvailableMasResult> Mes_CrCustomerMaCostCenter_ListAvailableMasAsync(string mesServer, string mesDatabase, int customerId)
        {
            return base.Channel.Mes_CrCustomerMaCostCenter_ListAvailableMasAsync(mesServer, mesDatabase, customerId);
        }
        
        public MESwebservice.Mes_CrEquipment_ListStationsResponseMes_CrEquipment_ListStationsResult Mes_CrEquipment_ListStations(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrEquipment_ListStations(mesServer, mesDatabase);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrEquipment_ListStationsResponseMes_CrEquipment_ListStationsResult> Mes_CrEquipment_ListStationsAsync(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrEquipment_ListStationsAsync(mesServer, mesDatabase);
        }
        
        public MESwebservice.Mes_CrEquipment_SelectByNameResponseMes_CrEquipment_SelectByNameResult Mes_CrEquipment_SelectByName(string mesServer, string mesDatabase, string name)
        {
            return base.Channel.Mes_CrEquipment_SelectByName(mesServer, mesDatabase, name);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrEquipment_SelectByNameResponseMes_CrEquipment_SelectByNameResult> Mes_CrEquipment_SelectByNameAsync(string mesServer, string mesDatabase, string name)
        {
            return base.Channel.Mes_CrEquipment_SelectByNameAsync(mesServer, mesDatabase, name);
        }
        
        public MESwebservice.Mes_CrEquipment_ListStationsByTypeResponseMes_CrEquipment_ListStationsByTypeResult Mes_CrEquipment_ListStationsByType(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrEquipment_ListStationsByType(mesServer, mesDatabase);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrEquipment_ListStationsByTypeResponseMes_CrEquipment_ListStationsByTypeResult> Mes_CrEquipment_ListStationsByTypeAsync(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrEquipment_ListStationsByTypeAsync(mesServer, mesDatabase);
        }
        
        public MESwebservice.Mes_CrFactoryMas_ListByFactoryResponseMes_CrFactoryMas_ListByFactoryResult Mes_CrFactoryMas_ListByFactory(string mesServer, string mesDatabase, string factoryId)
        {
            return base.Channel.Mes_CrFactoryMas_ListByFactory(mesServer, mesDatabase, factoryId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrFactoryMas_ListByFactoryResponseMes_CrFactoryMas_ListByFactoryResult> Mes_CrFactoryMas_ListByFactoryAsync(string mesServer, string mesDatabase, string factoryId)
        {
            return base.Channel.Mes_CrFactoryMas_ListByFactoryAsync(mesServer, mesDatabase, factoryId);
        }
        
        public MESwebservice.Mes_CrFactoryMas_SelectByNameResponseMes_CrFactoryMas_SelectByNameResult Mes_CrFactoryMas_SelectByName(string mesServer, string mesDatabase, string factoryName, string manArea)
        {
            return base.Channel.Mes_CrFactoryMas_SelectByName(mesServer, mesDatabase, factoryName, manArea);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrFactoryMas_SelectByNameResponseMes_CrFactoryMas_SelectByNameResult> Mes_CrFactoryMas_SelectByNameAsync(string mesServer, string mesDatabase, string factoryName, string manArea)
        {
            return base.Channel.Mes_CrFactoryMas_SelectByNameAsync(mesServer, mesDatabase, factoryName, manArea);
        }
        
        public MESwebservice.Mes_CrFactoryMas_ListAllResponseMes_CrFactoryMas_ListAllResult Mes_CrFactoryMas_ListAll(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrFactoryMas_ListAll(mesServer, mesDatabase);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrFactoryMas_ListAllResponseMes_CrFactoryMas_ListAllResult> Mes_CrFactoryMas_ListAllAsync(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrFactoryMas_ListAllAsync(mesServer, mesDatabase);
        }
        
        public MESwebservice.Mes_CrFactories_ListResponseMes_CrFactories_ListResult Mes_CrFactories_List(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrFactories_List(mesServer, mesDatabase);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrFactories_ListResponseMes_CrFactories_ListResult> Mes_CrFactories_ListAsync(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrFactories_ListAsync(mesServer, mesDatabase);
        }
        
        public MESwebservice.Mes_CrFamilies_SelectByNameResponseMes_CrFamilies_SelectByNameResult Mes_CrFamilies_SelectByName(string mesServer, string mesDatabase, string familyName)
        {
            return base.Channel.Mes_CrFamilies_SelectByName(mesServer, mesDatabase, familyName);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrFamilies_SelectByNameResponseMes_CrFamilies_SelectByNameResult> Mes_CrFamilies_SelectByNameAsync(string mesServer, string mesDatabase, string familyName)
        {
            return base.Channel.Mes_CrFamilies_SelectByNameAsync(mesServer, mesDatabase, familyName);
        }
        
        public MESwebservice.Mes_CrFamilies_ListByCustomerResponseMes_CrFamilies_ListByCustomerResult Mes_CrFamilies_ListByCustomer(string mesServer, string mesDatabase, string customerId)
        {
            return base.Channel.Mes_CrFamilies_ListByCustomer(mesServer, mesDatabase, customerId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrFamilies_ListByCustomerResponseMes_CrFamilies_ListByCustomerResult> Mes_CrFamilies_ListByCustomerAsync(string mesServer, string mesDatabase, string customerId)
        {
            return base.Channel.Mes_CrFamilies_ListByCustomerAsync(mesServer, mesDatabase, customerId);
        }
        
        public MESwebservice.Mes_CrMaRoutes_ListByManufacturingAreaResponseMes_CrMaRoutes_ListByManufacturingAreaResult Mes_CrMaRoutes_ListByManufacturingArea(string mesServer, string mesDatabase, string areaId)
        {
            return base.Channel.Mes_CrMaRoutes_ListByManufacturingArea(mesServer, mesDatabase, areaId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrMaRoutes_ListByManufacturingAreaResponseMes_CrMaRoutes_ListByManufacturingAreaResult> Mes_CrMaRoutes_ListByManufacturingAreaAsync(string mesServer, string mesDatabase, string areaId)
        {
            return base.Channel.Mes_CrMaRoutes_ListByManufacturingAreaAsync(mesServer, mesDatabase, areaId);
        }
        
        public MESwebservice.Mes_CrMaRoutes_SelectByNameResponseMes_CrMaRoutes_SelectByNameResult Mes_CrMaRoutes_SelectByName(string mesServer, string mesDatabase, string factoryName, string manArea, string route)
        {
            return base.Channel.Mes_CrMaRoutes_SelectByName(mesServer, mesDatabase, factoryName, manArea, route);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrMaRoutes_SelectByNameResponseMes_CrMaRoutes_SelectByNameResult> Mes_CrMaRoutes_SelectByNameAsync(string mesServer, string mesDatabase, string factoryName, string manArea, string route)
        {
            return base.Channel.Mes_CrMaRoutes_SelectByNameAsync(mesServer, mesDatabase, factoryName, manArea, route);
        }
        
        public MESwebservice.Mes_CrManufacturingAreas_SelectByNameResponseMes_CrManufacturingAreas_SelectByNameResult Mes_CrManufacturingAreas_SelectByName(string mesServer, string mesDatabase, string manArea)
        {
            return base.Channel.Mes_CrManufacturingAreas_SelectByName(mesServer, mesDatabase, manArea);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrManufacturingAreas_SelectByNameResponseMes_CrManufacturingAreas_SelectByNameResult> Mes_CrManufacturingAreas_SelectByNameAsync(string mesServer, string mesDatabase, string manArea)
        {
            return base.Channel.Mes_CrManufacturingAreas_SelectByNameAsync(mesServer, mesDatabase, manArea);
        }
        
        public MESwebservice.Mes_CrRoutes_SelectByNameResponseMes_CrRoutes_SelectByNameResult Mes_CrRoutes_SelectByName(string mesServer, string mesDatabase, string route)
        {
            return base.Channel.Mes_CrRoutes_SelectByName(mesServer, mesDatabase, route);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrRoutes_SelectByNameResponseMes_CrRoutes_SelectByNameResult> Mes_CrRoutes_SelectByNameAsync(string mesServer, string mesDatabase, string route)
        {
            return base.Channel.Mes_CrRoutes_SelectByNameAsync(mesServer, mesDatabase, route);
        }
        
        public MESwebservice.Mes_CrRouteSteps_ListByCustomerResponseMes_CrRouteSteps_ListByCustomerResult Mes_CrRouteSteps_ListByCustomer(string mesServer, string mesDatabase, string customerId)
        {
            return base.Channel.Mes_CrRouteSteps_ListByCustomer(mesServer, mesDatabase, customerId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrRouteSteps_ListByCustomerResponseMes_CrRouteSteps_ListByCustomerResult> Mes_CrRouteSteps_ListByCustomerAsync(string mesServer, string mesDatabase, string customerId)
        {
            return base.Channel.Mes_CrRouteSteps_ListByCustomerAsync(mesServer, mesDatabase, customerId);
        }
        
        public MESwebservice.Mes_CrRouteSteps_ListByRouteResponseMes_CrRouteSteps_ListByRouteResult Mes_CrRouteSteps_ListByRoute(string mesServer, string mesDatabase, string routeId)
        {
            return base.Channel.Mes_CrRouteSteps_ListByRoute(mesServer, mesDatabase, routeId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrRouteSteps_ListByRouteResponseMes_CrRouteSteps_ListByRouteResult> Mes_CrRouteSteps_ListByRouteAsync(string mesServer, string mesDatabase, string routeId)
        {
            return base.Channel.Mes_CrRouteSteps_ListByRouteAsync(mesServer, mesDatabase, routeId);
        }
        
        public MESwebservice.Mes_CrRouteSteps_SelectByIdResponseMes_CrRouteSteps_SelectByIdResult Mes_CrRouteSteps_SelectById(string mesServer, string mesDatabase, string routeStepId)
        {
            return base.Channel.Mes_CrRouteSteps_SelectById(mesServer, mesDatabase, routeStepId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrRouteSteps_SelectByIdResponseMes_CrRouteSteps_SelectByIdResult> Mes_CrRouteSteps_SelectByIdAsync(string mesServer, string mesDatabase, string routeStepId)
        {
            return base.Channel.Mes_CrRouteSteps_SelectByIdAsync(mesServer, mesDatabase, routeStepId);
        }
        
        public MESwebservice.Mes_CrRouteStepEquipment_ListByRouteResponseMes_CrRouteStepEquipment_ListByRouteResult Mes_CrRouteStepEquipment_ListByRoute(string mesServer, string mesDatabase, string routeId)
        {
            return base.Channel.Mes_CrRouteStepEquipment_ListByRoute(mesServer, mesDatabase, routeId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrRouteStepEquipment_ListByRouteResponseMes_CrRouteStepEquipment_ListByRouteResult> Mes_CrRouteStepEquipment_ListByRouteAsync(string mesServer, string mesDatabase, string routeId)
        {
            return base.Channel.Mes_CrRouteStepEquipment_ListByRouteAsync(mesServer, mesDatabase, routeId);
        }
        
        public MESwebservice.Mes_CrRouteStepEquipment_SelectByRouteStepIdResponseMes_CrRouteStepEquipment_SelectByRouteStepIdResult Mes_CrRouteStepEquipment_SelectByRouteStepId(string mesServer, string mesDatabase, string routeStepId)
        {
            return base.Channel.Mes_CrRouteStepEquipment_SelectByRouteStepId(mesServer, mesDatabase, routeStepId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrRouteStepEquipment_SelectByRouteStepIdResponseMes_CrRouteStepEquipment_SelectByRouteStepIdResult> Mes_CrRouteStepEquipment_SelectByRouteStepIdAsync(string mesServer, string mesDatabase, string routeStepId)
        {
            return base.Channel.Mes_CrRouteStepEquipment_SelectByRouteStepIdAsync(mesServer, mesDatabase, routeStepId);
        }
        
        public MESwebservice.Mes_CrSteps_SelectByNameResponseMes_CrSteps_SelectByNameResult Mes_CrSteps_SelectByName(string mesServer, string mesDatabase, string manArea)
        {
            return base.Channel.Mes_CrSteps_SelectByName(mesServer, mesDatabase, manArea);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrSteps_SelectByNameResponseMes_CrSteps_SelectByNameResult> Mes_CrSteps_SelectByNameAsync(string mesServer, string mesDatabase, string manArea)
        {
            return base.Channel.Mes_CrSteps_SelectByNameAsync(mesServer, mesDatabase, manArea);
        }
        
        public MESwebservice.Mes_CrSteps_ListResponseMes_CrSteps_ListResult Mes_CrSteps_List(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrSteps_List(mesServer, mesDatabase);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrSteps_ListResponseMes_CrSteps_ListResult> Mes_CrSteps_ListAsync(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrSteps_ListAsync(mesServer, mesDatabase);
        }
        
        public MESwebservice.Mes_CrStepTypes_ListResponseMes_CrStepTypes_ListResult Mes_CrStepTypes_List(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrStepTypes_List(mesServer, mesDatabase);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrStepTypes_ListResponseMes_CrStepTypes_ListResult> Mes_CrStepTypes_ListAsync(string mesServer, string mesDatabase)
        {
            return base.Channel.Mes_CrStepTypes_ListAsync(mesServer, mesDatabase);
        }
        
        public MESwebservice.Mes_CrTesters_SelectByNameResponseMes_CrTesters_SelectByNameResult Mes_CrTesters_SelectByName(string mesServer, string mesDatabase, string testerName)
        {
            return base.Channel.Mes_CrTesters_SelectByName(mesServer, mesDatabase, testerName);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_CrTesters_SelectByNameResponseMes_CrTesters_SelectByNameResult> Mes_CrTesters_SelectByNameAsync(string mesServer, string mesDatabase, string testerName)
        {
            return base.Channel.Mes_CrTesters_SelectByNameAsync(mesServer, mesDatabase, testerName);
        }
        
        public MESwebservice.Mes_EpSerialization_GenerateSerialNumberResponseMes_EpSerialization_GenerateSerialNumberResult Mes_EpSerialization_GenerateSerialNumber(string mesServer, string mesDatabase, int customerId, string serialNumberName, int quantity, bool exampleOnly, int userId, int assemblyId)
        {
            return base.Channel.Mes_EpSerialization_GenerateSerialNumber(mesServer, mesDatabase, customerId, serialNumberName, quantity, exampleOnly, userId, assemblyId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_EpSerialization_GenerateSerialNumberResponseMes_EpSerialization_GenerateSerialNumberResult> Mes_EpSerialization_GenerateSerialNumberAsync(string mesServer, string mesDatabase, int customerId, string serialNumberName, int quantity, bool exampleOnly, int userId, int assemblyId)
        {
            return base.Channel.Mes_EpSerialization_GenerateSerialNumberAsync(mesServer, mesDatabase, customerId, serialNumberName, quantity, exampleOnly, userId, assemblyId);
        }
        
        public MESwebservice.Mes_WpAssemblyRouteWip_ListAllByWipIdResponseMes_WpAssemblyRouteWip_ListAllByWipIdResult Mes_WpAssemblyRouteWip_ListAllByWipId(string mesServer, string mesDatabase, int wipId)
        {
            return base.Channel.Mes_WpAssemblyRouteWip_ListAllByWipId(mesServer, mesDatabase, wipId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpAssemblyRouteWip_ListAllByWipIdResponseMes_WpAssemblyRouteWip_ListAllByWipIdResult> Mes_WpAssemblyRouteWip_ListAllByWipIdAsync(string mesServer, string mesDatabase, int wipId)
        {
            return base.Channel.Mes_WpAssemblyRouteWip_ListAllByWipIdAsync(mesServer, mesDatabase, wipId);
        }
        
        public MESwebservice.Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdResponseMes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdResult Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerId(string mesServer, string mesDatabase, string serialNumber, string customerId)
        {
            return base.Channel.Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerId(mesServer, mesDatabase, serialNumber, customerId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdResponseMes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdResult> Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdAsync(string mesServer, string mesDatabase, string serialNumber, string customerId)
        {
            return base.Channel.Mes_WpAssemblyRouteWip_SelectBySerialNumberAndCustomerIdAsync(mesServer, mesDatabase, serialNumber, customerId);
        }
        
        public MESwebservice.Mes_WpAssemblyRouteWip_SelectByWipIdResponseMes_WpAssemblyRouteWip_SelectByWipIdResult Mes_WpAssemblyRouteWip_SelectByWipId(string mesServer, string mesDatabase, string wipId)
        {
            return base.Channel.Mes_WpAssemblyRouteWip_SelectByWipId(mesServer, mesDatabase, wipId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpAssemblyRouteWip_SelectByWipIdResponseMes_WpAssemblyRouteWip_SelectByWipIdResult> Mes_WpAssemblyRouteWip_SelectByWipIdAsync(string mesServer, string mesDatabase, string wipId)
        {
            return base.Channel.Mes_WpAssemblyRouteWip_SelectByWipIdAsync(mesServer, mesDatabase, wipId);
        }
        
        public MESwebservice.Mes_WpAssemblyRouteWip_ListByBatchIdResponseMes_WpAssemblyRouteWip_ListByBatchIdResult Mes_WpAssemblyRouteWip_ListByBatchId(string mesServer, string mesDatabase, string batchId)
        {
            return base.Channel.Mes_WpAssemblyRouteWip_ListByBatchId(mesServer, mesDatabase, batchId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpAssemblyRouteWip_ListByBatchIdResponseMes_WpAssemblyRouteWip_ListByBatchIdResult> Mes_WpAssemblyRouteWip_ListByBatchIdAsync(string mesServer, string mesDatabase, string batchId)
        {
            return base.Channel.Mes_WpAssemblyRouteWip_ListByBatchIdAsync(mesServer, mesDatabase, batchId);
        }
        
        public MESwebservice.Mes_WpBatch_SelectByNameResponseMes_WpBatch_SelectByNameResult Mes_WpBatch_SelectByName(string mesServer, string mesDatabase, string batchName)
        {
            return base.Channel.Mes_WpBatch_SelectByName(mesServer, mesDatabase, batchName);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpBatch_SelectByNameResponseMes_WpBatch_SelectByNameResult> Mes_WpBatch_SelectByNameAsync(string mesServer, string mesDatabase, string batchName)
        {
            return base.Channel.Mes_WpBatch_SelectByNameAsync(mesServer, mesDatabase, batchName);
        }
        
        public MESwebservice.Mes_WpBatch_ListResponseMes_WpBatch_ListResult Mes_WpBatch_List(string mesServer, string mesDatabase, string partials)
        {
            return base.Channel.Mes_WpBatch_List(mesServer, mesDatabase, partials);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpBatch_ListResponseMes_WpBatch_ListResult> Mes_WpBatch_ListAsync(string mesServer, string mesDatabase, string partials)
        {
            return base.Channel.Mes_WpBatch_ListAsync(mesServer, mesDatabase, partials);
        }
        
        public MESwebservice.Mes_WpBatch_SelectByIdResponseMes_WpBatch_SelectByIdResult Mes_WpBatch_SelectById(string mesServer, string mesDatabase, string batchId)
        {
            return base.Channel.Mes_WpBatch_SelectById(mesServer, mesDatabase, batchId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpBatch_SelectByIdResponseMes_WpBatch_SelectByIdResult> Mes_WpBatch_SelectByIdAsync(string mesServer, string mesDatabase, string batchId)
        {
            return base.Channel.Mes_WpBatch_SelectByIdAsync(mesServer, mesDatabase, batchId);
        }
        
        public MESwebservice.Mes_WpBatchAssemblies_ListAvailableResponseMes_WpBatchAssemblies_ListAvailableResult Mes_WpBatchAssemblies_ListAvailable(string mesServer, string mesDatabase, string batchId)
        {
            return base.Channel.Mes_WpBatchAssemblies_ListAvailable(mesServer, mesDatabase, batchId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpBatchAssemblies_ListAvailableResponseMes_WpBatchAssemblies_ListAvailableResult> Mes_WpBatchAssemblies_ListAvailableAsync(string mesServer, string mesDatabase, string batchId)
        {
            return base.Channel.Mes_WpBatchAssemblies_ListAvailableAsync(mesServer, mesDatabase, batchId);
        }
        
        public MESwebservice.Mes_WpWip_SelectBySerialNumberResponseMes_WpWip_SelectBySerialNumberResult Mes_WpWip_SelectBySerialNumber(string mesServer, string mesDatabase, string serialNumber)
        {
            return base.Channel.Mes_WpWip_SelectBySerialNumber(mesServer, mesDatabase, serialNumber);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpWip_SelectBySerialNumberResponseMes_WpWip_SelectBySerialNumberResult> Mes_WpWip_SelectBySerialNumberAsync(string mesServer, string mesDatabase, string serialNumber)
        {
            return base.Channel.Mes_WpWip_SelectBySerialNumberAsync(mesServer, mesDatabase, serialNumber);
        }
        
        public MESwebservice.Mes_WpWip_GetLastTestStatusResponseMes_WpWip_GetLastTestStatusResult Mes_WpWip_GetLastTestStatus(string mesServer, string mesDatabase, int wipId)
        {
            return base.Channel.Mes_WpWip_GetLastTestStatus(mesServer, mesDatabase, wipId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpWip_GetLastTestStatusResponseMes_WpWip_GetLastTestStatusResult> Mes_WpWip_GetLastTestStatusAsync(string mesServer, string mesDatabase, int wipId)
        {
            return base.Channel.Mes_WpWip_GetLastTestStatusAsync(mesServer, mesDatabase, wipId);
        }
        
        public MESwebservice.Mes_WpWip_ListCustomerAssemblyResponseMes_WpWip_ListCustomerAssemblyResult Mes_WpWip_ListCustomerAssembly(string mesServer, string mesDatabase, string serialNumber, int customerId)
        {
            return base.Channel.Mes_WpWip_ListCustomerAssembly(mesServer, mesDatabase, serialNumber, customerId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpWip_ListCustomerAssemblyResponseMes_WpWip_ListCustomerAssemblyResult> Mes_WpWip_ListCustomerAssemblyAsync(string mesServer, string mesDatabase, string serialNumber, int customerId)
        {
            return base.Channel.Mes_WpWip_ListCustomerAssemblyAsync(mesServer, mesDatabase, serialNumber, customerId);
        }
        
        public MESwebservice.Mes_WpWip_GetBirthStatusByWipIdResponseMes_WpWip_GetBirthStatusByWipIdResult Mes_WpWip_GetBirthStatusByWipId(string mesServer, string mesDatabase, int wipId)
        {
            return base.Channel.Mes_WpWip_GetBirthStatusByWipId(mesServer, mesDatabase, wipId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpWip_GetBirthStatusByWipIdResponseMes_WpWip_GetBirthStatusByWipIdResult> Mes_WpWip_GetBirthStatusByWipIdAsync(string mesServer, string mesDatabase, int wipId)
        {
            return base.Channel.Mes_WpWip_GetBirthStatusByWipIdAsync(mesServer, mesDatabase, wipId);
        }
        
        public MESwebservice.Mes_WpWip_GetBirthStatusBySerialNumberResponseMes_WpWip_GetBirthStatusBySerialNumberResult Mes_WpWip_GetBirthStatusBySerialNumber(string mesServer, string mesDatabase, string serialNumber, string customer)
        {
            return base.Channel.Mes_WpWip_GetBirthStatusBySerialNumber(mesServer, mesDatabase, serialNumber, customer);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpWip_GetBirthStatusBySerialNumberResponseMes_WpWip_GetBirthStatusBySerialNumberResult> Mes_WpWip_GetBirthStatusBySerialNumberAsync(string mesServer, string mesDatabase, string serialNumber, string customer)
        {
            return base.Channel.Mes_WpWip_GetBirthStatusBySerialNumberAsync(mesServer, mesDatabase, serialNumber, customer);
        }
        
        public MESwebservice.Mes_WpWipRouteSteps_SelectByNameResponseMes_WpWipRouteSteps_SelectByNameResult Mes_WpWipRouteSteps_SelectByName(string mesServer, string mesDatabase, string serialNumber)
        {
            return base.Channel.Mes_WpWipRouteSteps_SelectByName(mesServer, mesDatabase, serialNumber);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpWipRouteSteps_SelectByNameResponseMes_WpWipRouteSteps_SelectByNameResult> Mes_WpWipRouteSteps_SelectByNameAsync(string mesServer, string mesDatabase, string serialNumber)
        {
            return base.Channel.Mes_WpWipRouteSteps_SelectByNameAsync(mesServer, mesDatabase, serialNumber);
        }
        
        public MESwebservice.Mes_WpWipRouteSteps_SelectByWipIdResponseMes_WpWipRouteSteps_SelectByWipIdResult Mes_WpWipRouteSteps_SelectByWipId(string mesServer, string mesDatabase, string wipId)
        {
            return base.Channel.Mes_WpWipRouteSteps_SelectByWipId(mesServer, mesDatabase, wipId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpWipRouteSteps_SelectByWipIdResponseMes_WpWipRouteSteps_SelectByWipIdResult> Mes_WpWipRouteSteps_SelectByWipIdAsync(string mesServer, string mesDatabase, string wipId)
        {
            return base.Channel.Mes_WpWipRouteSteps_SelectByWipIdAsync(mesServer, mesDatabase, wipId);
        }
        
        public MESwebservice.Mes_WpWipRouteSteps_SelectByRouteStepIdResponseMes_WpWipRouteSteps_SelectByRouteStepIdResult Mes_WpWipRouteSteps_SelectByRouteStepId(string mesServer, string mesDatabase, int routeStepId, string dateFrom, string dateTo)
        {
            return base.Channel.Mes_WpWipRouteSteps_SelectByRouteStepId(mesServer, mesDatabase, routeStepId, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_WpWipRouteSteps_SelectByRouteStepIdResponseMes_WpWipRouteSteps_SelectByRouteStepIdResult> Mes_WpWipRouteSteps_SelectByRouteStepIdAsync(string mesServer, string mesDatabase, int routeStepId, string dateFrom, string dateTo)
        {
            return base.Channel.Mes_WpWipRouteSteps_SelectByRouteStepIdAsync(mesServer, mesDatabase, routeStepId, dateFrom, dateTo);
        }
        
        public MESwebservice.Mes_QmAssemblyProperties_SelectByNameResponseMes_QmAssemblyProperties_SelectByNameResult Mes_QmAssemblyProperties_SelectByName(string mesServer, string mesDatabase, string assemblyText, string propertyText)
        {
            return base.Channel.Mes_QmAssemblyProperties_SelectByName(mesServer, mesDatabase, assemblyText, propertyText);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_QmAssemblyProperties_SelectByNameResponseMes_QmAssemblyProperties_SelectByNameResult> Mes_QmAssemblyProperties_SelectByNameAsync(string mesServer, string mesDatabase, string assemblyText, string propertyText)
        {
            return base.Channel.Mes_QmAssemblyProperties_SelectByNameAsync(mesServer, mesDatabase, assemblyText, propertyText);
        }
        
        public MESwebservice.Mes_QmAssemblyProperties_ListByAssemblyResponseMes_QmAssemblyProperties_ListByAssemblyResult Mes_QmAssemblyProperties_ListByAssembly(string mesServer, string mesDatabase, string assemblyId)
        {
            return base.Channel.Mes_QmAssemblyProperties_ListByAssembly(mesServer, mesDatabase, assemblyId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_QmAssemblyProperties_ListByAssemblyResponseMes_QmAssemblyProperties_ListByAssemblyResult> Mes_QmAssemblyProperties_ListByAssemblyAsync(string mesServer, string mesDatabase, string assemblyId)
        {
            return base.Channel.Mes_QmAssemblyProperties_ListByAssemblyAsync(mesServer, mesDatabase, assemblyId);
        }
        
        public MESwebservice.Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdResponseMes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdResult Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerId(string mesServer, string mesDatabase, int customerId)
        {
            return base.Channel.Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerId(mesServer, mesDatabase, customerId);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdResponseMes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdResult> Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdAsync(string mesServer, string mesDatabase, int customerId)
        {
            return base.Channel.Mes_QmCustomerEpsCustomerDatabase_SelectByCustomerIdAsync(mesServer, mesDatabase, customerId);
        }
        
        public MESwebservice.Mes_QmCustomerConfiguration_SelectByIdResponseMes_QmCustomerConfiguration_SelectByIdResult Mes_QmCustomerConfiguration_SelectById(string mesServer, string mesDatabase, int customerId, string propertyKey)
        {
            return base.Channel.Mes_QmCustomerConfiguration_SelectById(mesServer, mesDatabase, customerId, propertyKey);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.Mes_QmCustomerConfiguration_SelectByIdResponseMes_QmCustomerConfiguration_SelectByIdResult> Mes_QmCustomerConfiguration_SelectByIdAsync(string mesServer, string mesDatabase, int customerId, string propertyKey)
        {
            return base.Channel.Mes_QmCustomerConfiguration_SelectByIdAsync(mesServer, mesDatabase, customerId, propertyKey);
        }
        
        public string GetAllCustomers()
        {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<string> GetAllCustomersAsync()
        {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public string CheckSN(string Customer, string Assembly_NR, string Assembly_REV, string SerialNumber)
        {
            return base.Channel.CheckSN(Customer, Assembly_NR, Assembly_REV, SerialNumber);
        }
        
        public System.Threading.Tasks.Task<string> CheckSNAsync(string Customer, string Assembly_NR, string Assembly_REV, string SerialNumber)
        {
            return base.Channel.CheckSNAsync(Customer, Assembly_NR, Assembly_REV, SerialNumber);
        }
        
        public string GetLastAssemblyIDByRouteStep(string pstrRouteStepID)
        {
            return base.Channel.GetLastAssemblyIDByRouteStep(pstrRouteStepID);
        }
        
        public System.Threading.Tasks.Task<string> GetLastAssemblyIDByRouteStepAsync(string pstrRouteStepID)
        {
            return base.Channel.GetLastAssemblyIDByRouteStepAsync(pstrRouteStepID);
        }
        
        public string GetLastTest(string SerialNumber)
        {
            return base.Channel.GetLastTest(SerialNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetLastTestAsync(string SerialNumber)
        {
            return base.Channel.GetLastTestAsync(SerialNumber);
        }
        
        public MESwebservice.ArrayOfXElement GetLastTestData(string pSerialNumber, string pServerName)
        {
            return base.Channel.GetLastTestData(pSerialNumber, pServerName);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetLastTestDataAsync(string pSerialNumber, string pServerName)
        {
            return base.Channel.GetLastTestDataAsync(pSerialNumber, pServerName);
        }
        
        public string GetDateTimeFromDataBase()
        {
            return base.Channel.GetDateTimeFromDataBase();
        }
        
        public System.Threading.Tasks.Task<string> GetDateTimeFromDataBaseAsync()
        {
            return base.Channel.GetDateTimeFromDataBaseAsync();
        }
        
        public MESwebservice.ArrayOfXElement GetTestHistoryByDateTime(string pCustomerID, string pSerialNumber, string pFromDate, string pToDate, string pRouteStepIDList, string pServerName)
        {
            return base.Channel.GetTestHistoryByDateTime(pCustomerID, pSerialNumber, pFromDate, pToDate, pRouteStepIDList, pServerName);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetTestHistoryByDateTimeAsync(string pCustomerID, string pSerialNumber, string pFromDate, string pToDate, string pRouteStepIDList, string pServerName)
        {
            return base.Channel.GetTestHistoryByDateTimeAsync(pCustomerID, pSerialNumber, pFromDate, pToDate, pRouteStepIDList, pServerName);
        }
        
        public MESwebservice.ArrayOfXElement GetDataLabelsBySerialNo(string pCustomerName, string pSerialNumber, string pDataType)
        {
            return base.Channel.GetDataLabelsBySerialNo(pCustomerName, pSerialNumber, pDataType);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetDataLabelsBySerialNoAsync(string pCustomerName, string pSerialNumber, string pDataType)
        {
            return base.Channel.GetDataLabelsBySerialNoAsync(pCustomerName, pSerialNumber, pDataType);
        }
        
        public MESwebservice.ArrayOfXElement GetTestHistory(string pCustomerName, string pSerialNumber, string pTestList)
        {
            return base.Channel.GetTestHistory(pCustomerName, pSerialNumber, pTestList);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetTestHistoryAsync(string pCustomerName, string pSerialNumber, string pTestList)
        {
            return base.Channel.GetTestHistoryAsync(pCustomerName, pSerialNumber, pTestList);
        }
        
        public MESwebservice.ArrayOfXElement GetTestsBySerialNo(string pSerialNumber)
        {
            return base.Channel.GetTestsBySerialNo(pSerialNumber);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetTestsBySerialNoAsync(string pSerialNumber)
        {
            return base.Channel.GetTestsBySerialNoAsync(pSerialNumber);
        }
        
        public MESwebservice.ArrayOfXElement GetBoardHistoryDS(string CustomerName, string pstrSerialNo)
        {
            return base.Channel.GetBoardHistoryDS(CustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBoardHistoryDSAsync(string CustomerName, string pstrSerialNo)
        {
            return base.Channel.GetBoardHistoryDSAsync(CustomerName, pstrSerialNo);
        }
        
        public MESwebservice.ArrayOfXElement GetHistoryByWipsDS(string pWipsList)
        {
            return base.Channel.GetHistoryByWipsDS(pWipsList);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetHistoryByWipsDSAsync(string pWipsList)
        {
            return base.Channel.GetHistoryByWipsDSAsync(pWipsList);
        }
        
        public string CheckSerialNumberByCheckpoint(string pCustomer, string pCheckPoint, string pSerialNo)
        {
            return base.Channel.CheckSerialNumberByCheckpoint(pCustomer, pCheckPoint, pSerialNo);
        }
        
        public System.Threading.Tasks.Task<string> CheckSerialNumberByCheckpointAsync(string pCustomer, string pCheckPoint, string pSerialNo)
        {
            return base.Channel.CheckSerialNumberByCheckpointAsync(pCustomer, pCheckPoint, pSerialNo);
        }
        
        public string Service_Status(int sec)
        {
            return base.Channel.Service_Status(sec);
        }
        
        public System.Threading.Tasks.Task<string> Service_StatusAsync(int sec)
        {
            return base.Channel.Service_StatusAsync(sec);
        }
        
        public string[] Test()
        {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string[]> TestAsync()
        {
            return base.Channel.TestAsync();
        }
        
        public string[] GetParserData(string CustomerName, string pstrSerialNo, string pSep)
        {
            return base.Channel.GetParserData(CustomerName, pstrSerialNo, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetParserDataAsync(string CustomerName, string pstrSerialNo, string pSep)
        {
            return base.Channel.GetParserDataAsync(CustomerName, pstrSerialNo, pSep);
        }
        
        public string GetFamilyByAssemblyID(string pstrAssemblyID, string pSep)
        {
            return base.Channel.GetFamilyByAssemblyID(pstrAssemblyID, pSep);
        }
        
        public System.Threading.Tasks.Task<string> GetFamilyByAssemblyIDAsync(string pstrAssemblyID, string pSep)
        {
            return base.Channel.GetFamilyByAssemblyIDAsync(pstrAssemblyID, pSep);
        }
        
        public string[] GetFamilyByCustomer(string pstrCustomerText, string pSep)
        {
            return base.Channel.GetFamilyByCustomer(pstrCustomerText, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetFamilyByCustomerAsync(string pstrCustomerText, string pSep)
        {
            return base.Channel.GetFamilyByCustomerAsync(pstrCustomerText, pSep);
        }
        
        public string CheckAnalyze(string pstrSerialNo, string pSep, string CustomerName)
        {
            return base.Channel.CheckAnalyze(pstrSerialNo, pSep, CustomerName);
        }
        
        public System.Threading.Tasks.Task<string> CheckAnalyzeAsync(string pstrSerialNo, string pSep, string CustomerName)
        {
            return base.Channel.CheckAnalyzeAsync(pstrSerialNo, pSep, CustomerName);
        }
        
        public string[] GetCustomers()
        {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCustomersAsync()
        {
            return base.Channel.GetCustomersAsync();
        }
        
        public string[] GetRoutesByMA(string MA_ID)
        {
            return base.Channel.GetRoutesByMA(MA_ID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetRoutesByMAAsync(string MA_ID)
        {
            return base.Channel.GetRoutesByMAAsync(MA_ID);
        }
        
        public MESwebservice.ArrayOfXElement GetAssemblyData(string pCustomer, string pAssemblylNo, string pAssemblyRev)
        {
            return base.Channel.GetAssemblyData(pCustomer, pAssemblylNo, pAssemblyRev);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetAssemblyDataAsync(string pCustomer, string pAssemblylNo, string pAssemblyRev)
        {
            return base.Channel.GetAssemblyDataAsync(pCustomer, pAssemblylNo, pAssemblyRev);
        }
        
        public MESwebservice.ArrayOfXElement GetEquipmentList(string pCustomerName, string pCommonName)
        {
            return base.Channel.GetEquipmentList(pCustomerName, pCommonName);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetEquipmentListAsync(string pCustomerName, string pCommonName)
        {
            return base.Channel.GetEquipmentListAsync(pCustomerName, pCommonName);
        }
        
        public MESwebservice.ArrayOfXElement GetRouteStepData(string pRouteStepID)
        {
            return base.Channel.GetRouteStepData(pRouteStepID);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetRouteStepDataAsync(string pRouteStepID)
        {
            return base.Channel.GetRouteStepDataAsync(pRouteStepID);
        }
        
        public MESwebservice.ArrayOfXElement GetAssembliesByRouteDS(string RouteID)
        {
            return base.Channel.GetAssembliesByRouteDS(RouteID);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetAssembliesByRouteDSAsync(string RouteID)
        {
            return base.Channel.GetAssembliesByRouteDSAsync(RouteID);
        }
        
        public string[] GetAssembliesByRoute(string RouteID)
        {
            return base.Channel.GetAssembliesByRoute(RouteID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAssembliesByRouteAsync(string RouteID)
        {
            return base.Channel.GetAssembliesByRouteAsync(RouteID);
        }
        
        public string[] GetAssembliesByRouteByCustomer(string RouteID, string CustomerName)
        {
            return base.Channel.GetAssembliesByRouteByCustomer(RouteID, CustomerName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAssembliesByRouteByCustomerAsync(string RouteID, string CustomerName)
        {
            return base.Channel.GetAssembliesByRouteByCustomerAsync(RouteID, CustomerName);
        }
        
        public string[] GetEquipmentByRouteStep(string RouteStepID)
        {
            return base.Channel.GetEquipmentByRouteStep(RouteStepID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetEquipmentByRouteStepAsync(string RouteStepID)
        {
            return base.Channel.GetEquipmentByRouteStepAsync(RouteStepID);
        }
        
        public string[] GetRouteStepsByRoute(string RouteID)
        {
            return base.Channel.GetRouteStepsByRoute(RouteID);
        }
        
        public System.Threading.Tasks.Task<string[]> GetRouteStepsByRouteAsync(string RouteID)
        {
            return base.Channel.GetRouteStepsByRouteAsync(RouteID);
        }
        
        public MESwebservice.ArrayOfXElement GetEquipmentData(string pEquipmentName)
        {
            return base.Channel.GetEquipmentData(pEquipmentName);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetEquipmentDataAsync(string pEquipmentName)
        {
            return base.Channel.GetEquipmentDataAsync(pEquipmentName);
        }
        
        public string[] GetSerialNoByLinkedMaterials(string pstrCustomer, string pLinkObject, string pLinkedNumber, int pLinkUnlink)
        {
            return base.Channel.GetSerialNoByLinkedMaterials(pstrCustomer, pLinkObject, pLinkedNumber, pLinkUnlink);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSerialNoByLinkedMaterialsAsync(string pstrCustomer, string pLinkObject, string pLinkedNumber, int pLinkUnlink)
        {
            return base.Channel.GetSerialNoByLinkedMaterialsAsync(pstrCustomer, pLinkObject, pLinkedNumber, pLinkUnlink);
        }
        
        public string[] GetEPSLinkedSerialNo(string pCustomerName, string pstrSerialNo)
        {
            return base.Channel.GetEPSLinkedSerialNo(pCustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetEPSLinkedSerialNoAsync(string pCustomerName, string pstrSerialNo)
        {
            return base.Channel.GetEPSLinkedSerialNoAsync(pCustomerName, pstrSerialNo);
        }
        
        public string GetLinkedValue(string pstrCustomer, string pstrSerialNo, string pstrLinkObject)
        {
            return base.Channel.GetLinkedValue(pstrCustomer, pstrSerialNo, pstrLinkObject);
        }
        
        public System.Threading.Tasks.Task<string> GetLinkedValueAsync(string pstrCustomer, string pstrSerialNo, string pstrLinkObject)
        {
            return base.Channel.GetLinkedValueAsync(pstrCustomer, pstrSerialNo, pstrLinkObject);
        }
        
        public MESwebservice.ArrayOfXElement GetLinkedValueDS(string pstrCustomer, string pstrSerialNo, string pstrLinkObject)
        {
            return base.Channel.GetLinkedValueDS(pstrCustomer, pstrSerialNo, pstrLinkObject);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetLinkedValueDSAsync(string pstrCustomer, string pstrSerialNo, string pstrLinkObject)
        {
            return base.Channel.GetLinkedValueDSAsync(pstrCustomer, pstrSerialNo, pstrLinkObject);
        }
        
        public string[] GetLinkedMaterials(string pstrCustomer, string pstrSerialNo)
        {
            return base.Channel.GetLinkedMaterials(pstrCustomer, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetLinkedMaterialsAsync(string pstrCustomer, string pstrSerialNo)
        {
            return base.Channel.GetLinkedMaterialsAsync(pstrCustomer, pstrSerialNo);
        }
        
        public string GetSerialNoByShipOrder(string pstrCustomer, string pstrOrderNo, string pSep)
        {
            return base.Channel.GetSerialNoByShipOrder(pstrCustomer, pstrOrderNo, pSep);
        }
        
        public System.Threading.Tasks.Task<string> GetSerialNoByShipOrderAsync(string pstrCustomer, string pstrOrderNo, string pSep)
        {
            return base.Channel.GetSerialNoByShipOrderAsync(pstrCustomer, pstrOrderNo, pSep);
        }
        
        public string GetSerialNoByBox(string pstrCustomer, string pstrBoxNo, string pSep)
        {
            return base.Channel.GetSerialNoByBox(pstrCustomer, pstrBoxNo, pSep);
        }
        
        public System.Threading.Tasks.Task<string> GetSerialNoByBoxAsync(string pstrCustomer, string pstrBoxNo, string pSep)
        {
            return base.Channel.GetSerialNoByBoxAsync(pstrCustomer, pstrBoxNo, pSep);
        }
        
        public string[] GetSerialNoForBatch(string pstrBatchNo)
        {
            return base.Channel.GetSerialNoForBatch(pstrBatchNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetSerialNoForBatchAsync(string pstrBatchNo)
        {
            return base.Channel.GetSerialNoForBatchAsync(pstrBatchNo);
        }
        
        public MESwebservice.ArrayOfXElement GetSerialNoForBatchDS(string pstrBatchNo, string pMesRaportowy, string pOutputFile)
        {
            return base.Channel.GetSerialNoForBatchDS(pstrBatchNo, pMesRaportowy, pOutputFile);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetSerialNoForBatchDSAsync(string pstrBatchNo, string pMesRaportowy, string pOutputFile)
        {
            return base.Channel.GetSerialNoForBatchDSAsync(pstrBatchNo, pMesRaportowy, pOutputFile);
        }
        
        public string GetWipCountByFamilyByRouteStep(string FamilyID, string RouteStepID, string pDateFrom, string pDateTo)
        {
            return base.Channel.GetWipCountByFamilyByRouteStep(FamilyID, RouteStepID, pDateFrom, pDateTo);
        }
        
        public System.Threading.Tasks.Task<string> GetWipCountByFamilyByRouteStepAsync(string FamilyID, string RouteStepID, string pDateFrom, string pDateTo)
        {
            return base.Channel.GetWipCountByFamilyByRouteStepAsync(FamilyID, RouteStepID, pDateFrom, pDateTo);
        }
        
        public string GetCParamByBatchNo(string BatchNo)
        {
            return base.Channel.GetCParamByBatchNo(BatchNo);
        }
        
        public System.Threading.Tasks.Task<string> GetCParamByBatchNoAsync(string BatchNo)
        {
            return base.Channel.GetCParamByBatchNoAsync(BatchNo);
        }
        
        public string GetAssemblyNo(string CustomerName, string pstrSerialNo)
        {
            return base.Channel.GetAssemblyNo(CustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string> GetAssemblyNoAsync(string CustomerName, string pstrSerialNo)
        {
            return base.Channel.GetAssemblyNoAsync(CustomerName, pstrSerialNo);
        }
        
        public string GetAssemblyProperty(string pAssemblyNo, string pAssemblyRev, string pPropertyKey)
        {
            return base.Channel.GetAssemblyProperty(pAssemblyNo, pAssemblyRev, pPropertyKey);
        }
        
        public System.Threading.Tasks.Task<string> GetAssemblyPropertyAsync(string pAssemblyNo, string pAssemblyRev, string pPropertyKey)
        {
            return base.Channel.GetAssemblyPropertyAsync(pAssemblyNo, pAssemblyRev, pPropertyKey);
        }
        
        public string GetBatchBySerialNo(string SerialNo, string Customer)
        {
            return base.Channel.GetBatchBySerialNo(SerialNo, Customer);
        }
        
        public System.Threading.Tasks.Task<string> GetBatchBySerialNoAsync(string SerialNo, string Customer)
        {
            return base.Channel.GetBatchBySerialNoAsync(SerialNo, Customer);
        }
        
        public string GetWipCountByAssemblyByRouteStep(string AssemblyID, string RouteStepID, string pDateFrom, string pDateTo, string pFirstEvent)
        {
            return base.Channel.GetWipCountByAssemblyByRouteStep(AssemblyID, RouteStepID, pDateFrom, pDateTo, pFirstEvent);
        }
        
        public System.Threading.Tasks.Task<string> GetWipCountByAssemblyByRouteStepAsync(string AssemblyID, string RouteStepID, string pDateFrom, string pDateTo, string pFirstEvent)
        {
            return base.Channel.GetWipCountByAssemblyByRouteStepAsync(AssemblyID, RouteStepID, pDateFrom, pDateTo, pFirstEvent);
        }
        
        public string[] GetMAbyCustomer(string CustomerName)
        {
            return base.Channel.GetMAbyCustomer(CustomerName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetMAbyCustomerAsync(string CustomerName)
        {
            return base.Channel.GetMAbyCustomerAsync(CustomerName);
        }
        
        public string[] GetAnalysisData(string pCustomer, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep)
        {
            return base.Channel.GetAnalysisData(pCustomer, pstrSerialNo, pstrEquipmentName, pstrTestDate, pstrQtyRec, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAnalysisDataAsync(string pCustomer, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep)
        {
            return base.Channel.GetAnalysisDataAsync(pCustomer, pstrSerialNo, pstrEquipmentName, pstrTestDate, pstrQtyRec, pSep);
        }
        
        public string[] GetMeasuredData(string CustomerName, string pstrSerialNo, string pstrDataLabel, string pSep)
        {
            return base.Channel.GetMeasuredData(CustomerName, pstrSerialNo, pstrDataLabel, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetMeasuredDataAsync(string CustomerName, string pstrSerialNo, string pstrDataLabel, string pSep)
        {
            return base.Channel.GetMeasuredDataAsync(CustomerName, pstrSerialNo, pstrDataLabel, pSep);
        }
        
        public string[] GetMeasuredDataBySerialNo(string pCustomerName, string pstrSerialNo, string pstrDataLabel, string pSep)
        {
            return base.Channel.GetMeasuredDataBySerialNo(pCustomerName, pstrSerialNo, pstrDataLabel, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetMeasuredDataBySerialNoAsync(string pCustomerName, string pstrSerialNo, string pstrDataLabel, string pSep)
        {
            return base.Channel.GetMeasuredDataBySerialNoAsync(pCustomerName, pstrSerialNo, pstrDataLabel, pSep);
        }
        
        public string[] GetBoardAnalysis(string CustomerName, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep)
        {
            return base.Channel.GetBoardAnalysis(CustomerName, pstrSerialNo, pstrEquipmentName, pstrTestDate, pstrQtyRec, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBoardAnalysisAsync(string CustomerName, string pstrSerialNo, string pstrEquipmentName, string pstrTestDate, string pstrQtyRec, string pSep)
        {
            return base.Channel.GetBoardAnalysisAsync(CustomerName, pstrSerialNo, pstrEquipmentName, pstrTestDate, pstrQtyRec, pSep);
        }
        
        public string GetPalletContents(string pCustomer, string pstrDateFrom, string pstrDateTo, string pPalletStatus, string pAllEvents, string pShowBoards, string pstrFolderOut, string pSaveAs, string pFileExtension)
        {
            return base.Channel.GetPalletContents(pCustomer, pstrDateFrom, pstrDateTo, pPalletStatus, pAllEvents, pShowBoards, pstrFolderOut, pSaveAs, pFileExtension);
        }
        
        public System.Threading.Tasks.Task<string> GetPalletContentsAsync(string pCustomer, string pstrDateFrom, string pstrDateTo, string pPalletStatus, string pAllEvents, string pShowBoards, string pstrFolderOut, string pSaveAs, string pFileExtension)
        {
            return base.Channel.GetPalletContentsAsync(pCustomer, pstrDateFrom, pstrDateTo, pPalletStatus, pAllEvents, pShowBoards, pstrFolderOut, pSaveAs, pFileExtension);
        }
        
        public string CheckPalletByMeasuredDataByBatch(string pCustomer, string pPalletNo)
        {
            return base.Channel.CheckPalletByMeasuredDataByBatch(pCustomer, pPalletNo);
        }
        
        public System.Threading.Tasks.Task<string> CheckPalletByMeasuredDataByBatchAsync(string pCustomer, string pPalletNo)
        {
            return base.Channel.CheckPalletByMeasuredDataByBatchAsync(pCustomer, pPalletNo);
        }
        
        public bool CheckPalletByMeasuredData(string pCustomer, string pPalletNo)
        {
            return base.Channel.CheckPalletByMeasuredData(pCustomer, pPalletNo);
        }
        
        public System.Threading.Tasks.Task<bool> CheckPalletByMeasuredDataAsync(string pCustomer, string pPalletNo)
        {
            return base.Channel.CheckPalletByMeasuredDataAsync(pCustomer, pPalletNo);
        }
        
        public string CustomerLineStepReport(string pCustomer, string pFactory, string pstrManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pReportServer, string pSaveAs, string pStatus)
        {
            return base.Channel.CustomerLineStepReport(pCustomer, pFactory, pstrManArea, pstrRoute, pstrStep, pstrDateFrom, pstrDateTo, pstrFolderOut, pReportServer, pSaveAs, pStatus);
        }
        
        public System.Threading.Tasks.Task<string> CustomerLineStepReportAsync(string pCustomer, string pFactory, string pstrManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pReportServer, string pSaveAs, string pStatus)
        {
            return base.Channel.CustomerLineStepReportAsync(pCustomer, pFactory, pstrManArea, pstrRoute, pstrStep, pstrDateFrom, pstrDateTo, pstrFolderOut, pReportServer, pSaveAs, pStatus);
        }
        
        public string GetPackedData(string pstrCustomer, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pSaveAs)
        {
            return base.Channel.GetPackedData(pstrCustomer, pstrDateFrom, pstrDateTo, pstrFolderOut, pSaveAs);
        }
        
        public System.Threading.Tasks.Task<string> GetPackedDataAsync(string pstrCustomer, string pstrDateFrom, string pstrDateTo, string pstrFolderOut, string pSaveAs)
        {
            return base.Channel.GetPackedDataAsync(pstrCustomer, pstrDateFrom, pstrDateTo, pstrFolderOut, pSaveAs);
        }
        
        public string WipCountByStepBySerialNo(string pstrManArea, string pstrRoute, string pstrStep, string pstrSerialNo, string pProductionServer)
        {
            return base.Channel.WipCountByStepBySerialNo(pstrManArea, pstrRoute, pstrStep, pstrSerialNo, pProductionServer);
        }
        
        public System.Threading.Tasks.Task<string> WipCountByStepBySerialNoAsync(string pstrManArea, string pstrRoute, string pstrStep, string pstrSerialNo, string pProductionServer)
        {
            return base.Channel.WipCountByStepBySerialNoAsync(pstrManArea, pstrRoute, pstrStep, pstrSerialNo, pProductionServer);
        }
        
        public string CreateBackFlashSAP(string CustomerName, string pstrManArea, string pstrRoute, string pstrEquipment, string pstrFamily, string pstrDateFrom, string pstrDateTo, string pstrFolderOut)
        {
            return base.Channel.CreateBackFlashSAP(CustomerName, pstrManArea, pstrRoute, pstrEquipment, pstrFamily, pstrDateFrom, pstrDateTo, pstrFolderOut);
        }
        
        public System.Threading.Tasks.Task<string> CreateBackFlashSAPAsync(string CustomerName, string pstrManArea, string pstrRoute, string pstrEquipment, string pstrFamily, string pstrDateFrom, string pstrDateTo, string pstrFolderOut)
        {
            return base.Channel.CreateBackFlashSAPAsync(CustomerName, pstrManArea, pstrRoute, pstrEquipment, pstrFamily, pstrDateFrom, pstrDateTo, pstrFolderOut);
        }
        
        public string GetListChangedBatch(System.DateTime pDateFrom, string pExcludeCustomer)
        {
            return base.Channel.GetListChangedBatch(pDateFrom, pExcludeCustomer);
        }
        
        public System.Threading.Tasks.Task<string> GetListChangedBatchAsync(System.DateTime pDateFrom, string pExcludeCustomer)
        {
            return base.Channel.GetListChangedBatchAsync(pDateFrom, pExcludeCustomer);
        }
        
        public string[] GetFirstTest(string pstrSerialNo)
        {
            return base.Channel.GetFirstTest(pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetFirstTestAsync(string pstrSerialNo)
        {
            return base.Channel.GetFirstTestAsync(pstrSerialNo);
        }
        
        public string[] GetBoardData(string pCustomerName, string pstrSerialNo)
        {
            return base.Channel.GetBoardData(pCustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBoardDataAsync(string pCustomerName, string pstrSerialNo)
        {
            return base.Channel.GetBoardDataAsync(pCustomerName, pstrSerialNo);
        }
        
        public MESwebservice.ArrayOfXElement GetAssemblyDataByBoardDS(string pCustomerName, string pstrSerialNo)
        {
            return base.Channel.GetAssemblyDataByBoardDS(pCustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetAssemblyDataByBoardDSAsync(string pCustomerName, string pstrSerialNo)
        {
            return base.Channel.GetAssemblyDataByBoardDSAsync(pCustomerName, pstrSerialNo);
        }
        
        public MESwebservice.ArrayOfXElement GetSerialNoByLinkedData(int customerId, string dateFromString, string dateToString, int linkObjectId, string linkedValue, int uniqueLink, int showUnlinkedSn)
        {
            return base.Channel.GetSerialNoByLinkedData(customerId, dateFromString, dateToString, linkObjectId, linkedValue, uniqueLink, showUnlinkedSn);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetSerialNoByLinkedDataAsync(int customerId, string dateFromString, string dateToString, int linkObjectId, string linkedValue, int uniqueLink, int showUnlinkedSn)
        {
            return base.Channel.GetSerialNoByLinkedDataAsync(customerId, dateFromString, dateToString, linkObjectId, linkedValue, uniqueLink, showUnlinkedSn);
        }
        
        public MESwebservice.ArrayOfXElement GetLinkObjectDS(string customer, string linkObject)
        {
            return base.Channel.GetLinkObjectDS(customer, linkObject);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetLinkObjectDSAsync(string customer, string linkObject)
        {
            return base.Channel.GetLinkObjectDSAsync(customer, linkObject);
        }
        
        public string[] GetBoardHistory(string CustomerName, string pstrSerialNo, string pSep)
        {
            return base.Channel.GetBoardHistory(CustomerName, pstrSerialNo, pSep);
        }
        
        public System.Threading.Tasks.Task<string[]> GetBoardHistoryAsync(string CustomerName, string pstrSerialNo, string pSep)
        {
            return base.Channel.GetBoardHistoryAsync(CustomerName, pstrSerialNo, pSep);
        }
        
        public MESwebservice.ArrayOfXElement GetBoxHeader(string pCustomerName, string pstrBoxNo)
        {
            return base.Channel.GetBoxHeader(pCustomerName, pstrBoxNo);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetBoxHeaderAsync(string pCustomerName, string pstrBoxNo)
        {
            return base.Channel.GetBoxHeaderAsync(pCustomerName, pstrBoxNo);
        }
        
        public MESwebservice.ArrayOfXElement GetLineStepReport(string pCustomer, string pFactory, string pManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pStatus, string pReportServer)
        {
            return base.Channel.GetLineStepReport(pCustomer, pFactory, pManArea, pstrRoute, pstrStep, pstrDateFrom, pstrDateTo, pStatus, pReportServer);
        }
        
        public System.Threading.Tasks.Task<MESwebservice.ArrayOfXElement> GetLineStepReportAsync(string pCustomer, string pFactory, string pManArea, string pstrRoute, string pstrStep, string pstrDateFrom, string pstrDateTo, string pStatus, string pReportServer)
        {
            return base.Channel.GetLineStepReportAsync(pCustomer, pFactory, pManArea, pstrRoute, pstrStep, pstrDateFrom, pstrDateTo, pStatus, pReportServer);
        }
        
        public string GetBoxNumber(string pCustomerName, string pstrSerialNo)
        {
            return base.Channel.GetBoxNumber(pCustomerName, pstrSerialNo);
        }
        
        public System.Threading.Tasks.Task<string> GetBoxNumberAsync(string pCustomerName, string pstrSerialNo)
        {
            return base.Channel.GetBoxNumberAsync(pCustomerName, pstrSerialNo);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BoardsSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BoardsSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BoardsSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://plkwim0app07/jrwebservices/mes.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.BoardsSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://plkwim0app07/jrwebservices/mes.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BoardsSoap,
            
            BoardsSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.0.3.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
